<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lenovo.HIS.cUtils</name>
    </assembly>
    <members>
        <member name="T:Lenovo.HIS.cUtils.fmCefWebBrowser">
            <summary>
            web容器
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmCefWebBrowser.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmCefWebBrowser.#ctor(System.String,System.Object[],System.String,System.String)">
            <summary>
            带参数构造
            </summary>
            <param name="url">地址</param>
            <param name="obj">参数</param>
            <param name="cookieName">名称</param>
            <param name="cookieValue">值</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmCefWebBrowser.SetCefCookies(System.String,System.Net.CookieCollection)">
            <summary>
            设置Cookies
            </summary>
            <param name="url">地址</param>
            <param name="cookies"></param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmCefWebBrowser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmCefWebBrowser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmCefWebBrowser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.CookieVisitor">
            <summary>
            设置Cookie
            </summary>
        </member>
        <member name="E:Lenovo.HIS.cUtils.CookieVisitor.SendCookie">
            <summary>
            设置时事件
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CookieVisitor.Visit(CefSharp.Cookie,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            设置cookie
            </summary>
            <param name="cookie">CefSharp.Cookie</param>
            <param name="count">暂未用</param>
            <param name="total">暂未用</param>
            <param name="deleteCookie">是否删除cookie</param>
            <returns>成功true  失败false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.DownloadHandler.HttpDownloadFile(System.String,System.String)">
            <summary>
            Http下载文件
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmCreateTemp">
            <summary>
            报表查询条件框
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmCreateTemp.m_listPar">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmCreateTemp.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmCreateTemp.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmCreateTemp.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmCreateTemp.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmDeptChange">
            <summary>
            科室选择
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmDeptChange.m_EditType">
            <summary>
            0科室 1 病区 2 药房
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDeptChange.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDeptChange.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="deptCode">科室代码</param>
            <param name="selectIndex">选择的索引</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDeptChange.#ctor(System.Int32)">
            <summary>
            修改通用科室病区、药房 0科室 1 病区 2 药库 3 药房 4 药房药库
            </summary>
            <param name="editType">0科室 1 病区 2 药房药库</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDeptChange.SetDept">
            <summary>
            设置科室
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmDeptChange.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDeptChange.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDeptChange.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmGridAdvancedSettings">
            <summary>
            Grid高级样式
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmGridAdvancedSettings.MGridView">
            <summary>
            当前活动GridView
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmGridAdvancedSettings.#ctor">
            <summary>
            Grid高级样式
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmGridAdvancedSettings.SetDtStyle(DevExpress.XtraGrid.Views.Grid.GridView,System.String,System.Collections.Generic.List{Lenovo.HIS.cUtils.EntityGridDisplay})">
            <summary>
            设置View样式
            </summary>
            <param name="_GridView">GridView</param>
            <param name="_MGridID">gridID</param>
            <param name="_mListGridDisplay">grid列表</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmGridAdvancedSettings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmGridAdvancedSettings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmGridAdvancedSettings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmLoginMany">
            <summary>
            用户输入控件
            </summary>
            <summary>
            多人登录验证
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmLoginMany.lstUser">
            <summary>
            全部登录成功的信息
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmLoginMany.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmLoginMany.#ctor(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            多人登录
            </summary>
            <param name="lstUserNumber">多人工号，内容可为空</param>
            <param name="title">标题</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmLoginMany.UserCtl">
            <summary>
            用户类
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmLoginMany.UserCtl.userName">
            <summary>
            用户名控件
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmLoginMany.UserCtl.userPSW">
            <summary>
            密码空间
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmLoginMany.UserCtl.chbPsw">
            <summary>
            密码勾选控件
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmLoginMany.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmLoginMany.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmLoginMany.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmLoginTwice">
            <summary>
            多签名
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmLoginTwice.m_user">
            <summary>
            用户
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmLoginTwice.m_IsChangeApp">
            <summary>
            选择
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmLoginTwice.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmLoginTwice.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="_changeApp">是否选中</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmLoginTwice.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmLoginTwice.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmLoginTwice.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmPrintView">
            <summary>
            打印视图
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmPrintView.ReportSaveDir">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmPrintView.#ctor(System.Boolean,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="ToolBarVisible">if set to <c>true</c> [tool bar visible].</param>
            <param name="StatusBarVisible">if set to <c>true</c> [status bar visible].</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmPrintView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmPrintView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmPrintView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmPrintView.FPViewControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.MouseOperate">
            <summary>
            鼠标操作
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.MouseOperate.Move">
            <summary>
            移动
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.MouseOperate.Down">
            <summary>
            按下
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.MouseOperate.Up">
            <summary>
            抬起
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.MouseOperate.Leave">
            <summary>
            离开
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.MouseDownEventHandler">
            <summary>
            鼠标点击事件
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.SystemButtonManager">
            <summary>
            系统按钮管理
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.SystemButtonState">
            <summary>
            按钮状态
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.SystemButtonState.Normal">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.SystemButtonState.HighLight">
            <summary>
            高亮
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.SystemButtonState.Down">
            <summary>
            按下
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.SystemButtonState.DownLeave">
            <summary>
            离开
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmReadCard">
            <summary>
            读卡类
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmReadCard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReadCard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReadCard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmReportDialog">
            <summary>
            报表
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReportDialog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReportDialog.#ctor(System.String,System.Boolean,System.Collections.Generic.List{Lenovo.HIS.Entities.EntityChidrenReportParm})">
            <summary>
            
            </summary>
            <param name="reportCode">报表代码</param>
            <param name="isChildren">是否为子级报表</param>
            <param name="lstChPars">子级报表传递过来的参数</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmReportDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReportDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReportDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmReport">
            <summary>
            报表界面
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReport.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReport.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="reportCode">报表代码</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReport.isCreateTemp(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityParm})">
            <summary>
            是否需要创建查询条件界面
            </summary>
            <param name="lst">参数列表</param>
            <returns>是true 否false</returns>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmReport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmReport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmSearchAndMultiSelect">
            <summary>
            多下拉框检索条件
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.Text">
            <summary>
            控件显示值
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.EditValue">
            <summary>
            控件实际值
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.FormLoad">
            <summary>
            页面加载事件
            </summary>
            <param name="str"></param>
            <returns>string</returns>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.OnFormLoad">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.Gc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.Gdv">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.DisplayMember">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.ValueMember">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.DisplayColumns">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmSearchAndMultiSelect.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCPanelImage">
            <summary>
            图片容器pannel
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCPanelImage.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaintBackground 事件
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCPanelImage.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint 事件
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCPanelImage.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCPanelImage.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCPanelImage.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCContentPnl">
            <summary>
            公告栏-内容控件
            </summary>
        </member>
        <member name="E:Lenovo.HIS.cUtils.UCContentPnl.ClickEvent">
            <summary>
            点击事件
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCContentPnl.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCContentPnl.TitleContext">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCContentPnl.TitleTime">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCContentPnl.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCContentPnl.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCContentPnl.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCPage">
            <summary>
            公告栏-分页控件
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCPage.RowCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCPage.RowPageCount">
            <summary>
            每页的行数
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCPage.CurrentPage">
            <summary>
            当前第几页
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCPage.SetCurentPage(System.Int32)">
            <summary>
            
            </summary>
            <param name="page"></param>
        </member>
        <member name="E:Lenovo.HIS.cUtils.UCPage.ClickEvent">
            <summary>
            页点击事件
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCPage.changPage">
            <summary>
            页码是否变化
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCPage.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCPage.showMsg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCPage.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCPage.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCPage.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCTitlePnl">
            <summary>
            公告栏-左侧标题控件
            </summary>
        </member>
        <member name="E:Lenovo.HIS.cUtils.UCTitlePnl.ClickEvent">
            <summary>
            点击事件
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCTitlePnl.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCTitlePnl.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCTitlePnl.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCTitlePnl.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCTitlePnl.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmMoreWait">
            <summary>
            多任务等待
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMoreWait.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMoreWait.#ctor(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityWaiting})">
            <summary>
            多个步骤，旋转等待
            </summary>
            <param name="Methods"></param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmMoreWait.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMoreWait.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMoreWait.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmWaitProgress">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaitProgress.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaitProgress.SetCaption(System.String)">
            <summary>
            
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaitProgress.SetDescription(System.String)">
            <summary>
            
            </summary>
            <param name="description"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaitProgress.ProcessCommand(System.Enum,System.Object)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <param name="arg"></param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmWaitProgress.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaitProgress.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaitProgress.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EntityGridDisplay">
            <summary>
            GRID显示定义表Entity的实体对象
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityGridDisplay.GridID">
            <summary>
            GridID(唯一guid)
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityGridDisplay.UserID">
            <summary>
            操作员id
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityGridDisplay.ViewName">
            <summary>
            View控件名称
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityGridDisplay.ConfigContext">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityGridDisplay.Type">
            <summary>
            类型 1：普通样式  2：高级样式  3：高级样式Schema
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityGridDisplay.Status">
            <summary>
            状态  0修改 1默认 2新增 3删除
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityGridDisplay.GridControl">
            <summary>
            GridControl
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityGridDisplay.FullFormName">
            <summary>
            FormName
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmConfigSettingForm">
            <summary>
            配置设置界面
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmConfigSettingForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmConfigSettingForm.SetRowsGroupIndexCheck(DevExpress.XtraGrid.Views.Grid.GridView,System.Int32,System.Boolean)">
            <summary>
            递归 全选或者全否
            </summary>
            <param name="view">视图</param>
            <param name="_RowIndex"></param>
            <param name="_bool">选或者不选</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmConfigSettingForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmConfigSettingForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmConfigSettingForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.CustomGridView">
            <summary>
            自定义grid
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridView.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridView.SetGridControlAccessMetod(DevExpress.XtraGrid.GridControl)">
            <summary>
            
            </summary>
            <param name="newControl"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridView.OnCreateLookupDisplayFilter(System.String,System.String)">
            <summary>
            为了使【下拉Grid】能应用合适的【过滤条件】，我们需要重写OnCreateLookupDisplayFilter方法。
            </summary>
            <param name="text">The text.</param>
            <param name="displayMember">The display member.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridView.ViewName">
            <summary>
            View名称
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridView.GetExtraFilterText">
            <summary>
            过滤内容
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.CustomGridPainter">
            <summary>
            自定义grid视图
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridPainter.#ctor(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            构造
            </summary>
            <param name="view">GridView</param>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridPainter.View">
            <summary>
            视图
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridPainter.DrawRowCell(DevExpress.XtraGrid.Views.Grid.Drawing.GridViewDrawArgs,DevExpress.XtraGrid.Views.Grid.ViewInfo.GridCellInfo)">
            <summary>
            为了高亮显示匹配到的结果，我们必须重写视图的绘图机制。我们需要创建自定义的绘图者，并重写DrawRowCell方法。
            </summary>
            <param name="e">绘制事件参数</param>
            <param name="cell">单元格信息</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.CustomGridInfoRegistrator">
            <summary>
            自定义视图
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridInfoRegistrator.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridInfoRegistrator.CreatePainter(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            
            </summary>
            <param name="view">视图</param>
            <returns>BaseViewPainter</returns>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridInfoRegistrator.ViewName">
            <summary>
            视图名
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridInfoRegistrator.CreateView(DevExpress.XtraGrid.GridControl)">
            <summary>
            创建视图
            </summary>
            <param name="grid">GridControl</param>
            <returns>BaseView</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.CustomGridControl">
            <summary>
            GridControl
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridControl.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridControl.RegisterAvailableViewsCore(DevExpress.XtraGrid.Registrator.InfoCollection)">
            <summary>
            注册可见视图
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridControl.CreateDefaultView">
            <summary>
            创建默认视图
            </summary>
            <returns>BaseView</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.RepositoryItemCustomGridLookUpEdit">
            <summary>
            自定义grid
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemCustomGridLookUpEdit.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.RepositoryItemCustomGridLookUpEdit.TextEditStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.RepositoryItemCustomGridLookUpEdit.CustomGridLookUpEditName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.RepositoryItemCustomGridLookUpEdit.EditorTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemCustomGridLookUpEdit.RegisterCustomGridLookUpEdit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemCustomGridLookUpEdit.CreateViewInstance">
            <summary>
            
            </summary>
            <returns>GridView</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemCustomGridLookUpEdit.CreateGrid">
            <summary>
            
            </summary>
            <returns>GridControl</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.MultiColumnGridLookUpEdit">
            <summary>
            自定义多选grid下拉
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MultiColumnGridLookUpEdit.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.MultiColumnGridLookUpEdit.EditorTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.MultiColumnGridLookUpEdit.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCChromeBrowser">
            <summary>
            谷歌浏览器
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCChromeBrowser.#ctor(System.String)">
            <summary>
            创建浏览器
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCChromeBrowser.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCChromeBrowser.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCChromeBrowser.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCRIGridLookUpEdit">
            <summary>
            自定义表格
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCGridLookUpEditName">
            <summary>
            控件名称
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCFiltercolumnText">
            <summary>
            筛选列文本
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCRIGridLookUpEdit._CloseDefaultFilter">
            <summary>
            是否关闭默认displaymenber检索
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCAllowEditText">
            <summary>
            当前输入文本框文本信息
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCAllowEditFilterExtText">
            <summary>
            当前扩展过滤方式筛选文本(敲击空格按键后，只对当前文本列筛选)
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCIsAllowNullSet">
            <summary>
            是否允许设置空值
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCRIGridLookUpEdit._UCIsEscape">
            <summary>
            是否按Escap退出
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCScrType">
            <summary>
            默认筛选模式
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.EditorTypeName">
            <summary>
            重写EditorTypeName
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.BindField(System.Object,System.String,System.String,System.String,DevExpress.XtraEditors.Controls.TextEditStyles)">
            <summary>
            快速绑定
            </summary>
            <param name="dataSource">数据源</param>
            <param name="valueMember">ValueMember 值</param>
            <param name="displayMember">DisplayMember 显示值</param>
            <param name="FiltercolumnName">Filtercolumn 检索的字段</param>
            <param name="editeStyles">编辑模式 默认TextEditStyles.Standard</param>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCFiltercolumn">
            <summary>
            设置筛选列，根据FieldName筛选，多列用|分割，查询方式FieldName加%，如 %工号|%姓名% 未指定属性则按照所有显示列筛选。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.CloseDefaultFilter">
            <summary>
            是否关闭默认displaymenber检索
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCEditText">
            <summary>
            当前输入文本框文本信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCScr">
            <summary>
            当前输入文本框文本信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCIsAllowNull">
            <summary>
            是否允许设置空值
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCHidePopupKey">
            <summary>
            设置某个键值,当按下此键值的时候不弹出下拉框
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCHidePopup">
            <summary>
            设置某个键值,当按下此键值的时候不弹出下拉框。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCIsEscape">
            <summary>
            是否按Escape退出来的
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCEditFilterExtText">
            <summary>
            当前输入文本框文本信息
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.UCRegisterGridLookUpEdit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.Assign(DevExpress.XtraEditors.Repository.RepositoryItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.SetCharges(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityCharges},System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            设置收费项目
            </summary>
            <param name="Charges">收费项目列表</param>
            <param name="dicIndex">列位置信息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.SetCharges(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityCharges})">
            <summary>
            设置收费项目
            </summary>
            <param name="Charges">收费项目列表</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCRIGridLookUpEdit.SetChargesCom(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityCharges},System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Sets the charges COM.
            </summary>
            <param name="Charges">The charges.</param>
            <param name="dicIndex">Index of the dic.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCGridLookUpEdit">
            <summary>
            GridLookUpEdit封装类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.SetCharges(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityCharges})">
            <summary>
            pubvar.chargesList收费项目快速绑定
            </summary>
            <param name="Charges">The charges.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.SetCharges(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityCharges},System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            设置收费项目
            </summary>
            <param name="Charges">收费项目列表</param>
            <param name="dicIndex">列位置信息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.SetChargesCom(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityCharges},System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Sets the charges COM.
            </summary>
            <param name="Charges">The charges.</param>
            <param name="dicIndex">Index of the dic.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.BindField(System.Object,System.String,System.String,System.String,DevExpress.XtraEditors.Controls.TextEditStyles)">
            <summary>
            快速绑定
            </summary>
            <param name="dataSource">数据源</param>
            <param name="valueMember">ValueMember 值</param>
            <param name="displayMember">DisplayMember 显示值</param>
            <param name="FiltercolumnName">Filtercolumn 检索的字段 %工号|%姓名% </param>
            <param name="editeStyles">编辑模式 默认TextEditStyles.Standard</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            重写KeyDown
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.UpdateEditValueOnClose(DevExpress.XtraEditors.PopupCloseMode,System.Boolean,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="closeMode"></param>
            <param name="acceptValue"></param>
            <param name="newValue"></param>
            <param name="oldValue"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.EndAcceptEditValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.UCGridLookUpEdit_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            键盘按下弹起触发
            </summary>
            <param name="sender">object sender</param>
            <param name="e">KeyEventArgs e</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.UCGridLookUpEdit_EditValueChanging(System.Object,DevExpress.XtraEditors.Controls.ChangingEventArgs)">
            <summary>
            EditValue改变触发
            </summary>
            <param name="sender">object sender</param>
            <param name="e">ChangingEventArgs e</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.UCGridLookUpEdit_Popup(System.Object,System.EventArgs)">
            <summary>
            当筛选GRID显示触发
            </summary>
            <param name="sender">object sender</param>
            <param name="e">System.EventArgs e</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCGridLookUpEdit.EditorTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCGridLookUpEdit.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCGridLookUpEditFunction">
            <summary>
            表格筛选
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEditFunction.FilterLookupGridLookUpEdit(System.Object)">
            <summary>
            筛选实现
            </summary>
            <param name="sender">object sender</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEditFunction.GetBinaryOperator(System.String,System.String,Lenovo.HIS.cUtils.Enum筛选模式)">
            <summary>
            返回筛选方式
            </summary>
            <param name="psStrFilterText">筛选方向</param>
            <param name="psAutoSearchText">筛选文本</param>
            <param name="_en筛选模式"></param>
            <returns>BinaryOperator</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEditFunction.GetFilterDirection(System.String)">
            <summary>
            通过设置属性返回筛选方式
            </summary>
            <param name="psStrFilterText"></param>
            <returns>Enum筛选方式</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.Enum筛选方式">
            <summary>
            en筛选方式
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.Enum筛选方式.All">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.Enum筛选方式.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.Enum筛选方式.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.Enum筛选模式">
            <summary>
            筛选模式
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.Enum筛选模式.ScrConn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.Enum筛选模式.ScrLike">
            <summary>
            
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCGridLookUpEdit2">
            <summary>
            该控件解决了UCGridLookUpEdit 对应的检索不准确、左右键数据消失的bug问题
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCGridLookUpEdit2.DtoProp">
            <summary>
            实体属性
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCGridLookUpEdit2.DtoExte">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCGridLookUpEdit2.AllowEmpty">
            <summary>
            是否允许为空
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCGridLookUpEdit2.ToolTipMsg">
            <summary>
            为空时的提示信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCGridLookUpEdit2.IsPopUp">
            <summary>
            获取焦点是否显示下拉列表
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCGridLookUpEdit2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCGridLookUpEdit2.EditorTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCGridLookUpEdit2.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit">
            <summary>
            这里定义属性显示到属性设置界面
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.UCFiltercolumnText">
            <summary>
            筛选列文本
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.UCScrType">
            <summary>
            默认筛选模式
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.IsEnterSendTab">
            <summary>
            回车时是否发送tab键，默认为true
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.RegisterHealthGridLookUpEdit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.#ctor">
            <summary>
            第二步：构造
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.cgc">
            <summary>
            第三步：创建表格
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.CreateGrid">
            <summary>
            
            </summary>
            <returns>GridControl</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.Assign(DevExpress.XtraEditors.Repository.RepositoryItem)">
            <summary>
            第四步：获取设置属性并赋值
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.TextEditStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.CustomGridLookUpEditName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.EditorTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="E:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.DataSourceChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.OnDataSourceChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.RepositoryItemZKSoftGridLookUpEdit.CreateViewInstance">
            <summary>
            
            </summary>
            <returns>GridView</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.CustomGridControl2">
            <summary>
            自定义表格
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridControl2.isEnterSendTab">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridControl2.UCFiltercolumnText">
            <summary>
            设置筛选列，根据FieldName筛选，多列用|分割，查询方式FieldName加%，如 %工号|%姓名% 未指定属性则按照所有显示列筛选。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridControl2.UCScrType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridControl2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridControl2.RegisterAvailableViewsCore(DevExpress.XtraGrid.Registrator.InfoCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridControl2.CreateDefaultView">
            <summary>
            
            </summary>
            <returns>BaseView</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.CustomGridView2">
            <summary>
            自定义表格视图 GridView
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridView2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridView2.SetGridControlAccessMetod(DevExpress.XtraGrid.GridControl)">
            <summary>
            
            </summary>
            <param name="newControl"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridView2.OnCreateLookupDisplayFilter(System.String,System.String)">
            <summary>
            过滤
            </summary>
            <param name="text">内容</param>
            <param name="displayMember">显示内容</param>
            <returns>string</returns>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridView2.ViewName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridView2.GetExtraFilterText">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridView2.FilterLookupGridLookUpEdit(System.String,Lenovo.HIS.cUtils.CustomGridControl2,DevExpress.XtraGrid.Columns.GridColumnCollection)">
            <summary>
            筛选实现
            </summary>
            <param name="scText">检索内容</param>
            <param name="gcl">grid控件</param>
            <param name="col">所有列</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridView2.GetBinaryOperator(System.String,System.String,Lenovo.HIS.cUtils.Enum筛选模式)">
            <summary>
            返回筛选方式
            </summary>
            <param name="psStrFilterText">筛选方向</param>
            <param name="psAutoSearchText">筛选文本</param>
            <param name="_en筛选模式">筛选模式</param>
            <returns>BinaryOperator</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridView2.GetFilterDirection(System.String)">
            <summary>
            通过设置属性返回筛选方式
            </summary>
            <param name="psStrFilterText"></param>
            <returns>Enum筛选方式</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.CustomGridPainter2">
            <summary>
            GridPainter
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridPainter2.#ctor(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            视图
            </summary>
            <param name="view">视图</param>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridPainter2.View">
            <summary>
            View
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridPainter2.DrawRowCell(DevExpress.XtraGrid.Views.Grid.Drawing.GridViewDrawArgs,DevExpress.XtraGrid.Views.Grid.ViewInfo.GridCellInfo)">
            <summary>
            DrawRowCell
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
            <param name="cell">单元格</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.CustomGridInfoRegistrator2">
            <summary>
            表格注册类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridInfoRegistrator2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridInfoRegistrator2.CreatePainter(DevExpress.XtraGrid.Views.Base.BaseView)">
            <summary>
            
            </summary>
            <param name="view">视图</param>
            <returns>BaseViewPainter</returns>
        </member>
        <member name="P:Lenovo.HIS.cUtils.CustomGridInfoRegistrator2.ViewName">
            <summary>
            视图名称
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.CustomGridInfoRegistrator2.CreateView(DevExpress.XtraGrid.GridControl)">
            <summary>
            
            </summary>
            <param name="grid">GridControl</param>
            <returns>BaseView</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UCSearchLookUpEdit">
            <summary>
            检索表格
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCSearchLookUpEdit.EditValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCSearchLookUpEdit.Item">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.UCSearchLookUpEdit.ReadOnly">
            <summary>
            是否按Escape退出来的
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCSearchLookUpEdit.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCSearchLookUpEdit.BindField(System.Object,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            快速绑定
            </summary>
            <param name="dataSource">数据源</param>
            <param name="displayMember">显示值</param>
            <param name="valueMember">实际值</param>
            <param name="displayColumns">指定你显示列</param>
            <param name="captions">指定显示列标题</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.UCSearchLookUpEdit.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCSearchLookUpEdit.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UCSearchLookUpEdit.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要修改
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmJHChooseE_Card">
            <summary>
            选择电子卡类型
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmJHChooseE_Card.cardType">
            <summary>
            电子卡类型  1 健康卡  2 社保卡
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmJHChooseE_Card.#ctor">
            <summary>
            选择电子卡类型
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmJHChooseE_Card.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmJHChooseE_Card.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmJHChooseE_Card.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EndpointBehaviorInserter">
            <summary>
            拦截请求
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.EndpointBehaviorInserter.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            添加参数绑定
            </summary>
            <param name="endpoint">终结点</param>
            <param name="bindingParameters">参数</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.EndpointBehaviorInserter.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            请求到来时
            </summary>
            <param name="endpoint">终结点</param>
            <param name="clientRuntime"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.EndpointBehaviorInserter.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            分发时
            </summary>
            <param name="endpoint">终结点</param>
            <param name="endpointDispatcher">终结点分发</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.EndpointBehaviorInserter.Validate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            
            </summary>
            <param name="endpoint">终结点</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.EndpointBehaviorInserter.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
            <summary>
            发送请求前
            </summary>
            <param name="request">请求消息</param>
            <param name="channel">通道</param>
            <returns>null</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.EndpointBehaviorInserter.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary>
            接受消息后
            </summary>
            <param name="reply">消息</param>
            <param name="correlationState">状态</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.MessageIntercept">
            <summary>
            WCF消息拦截
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MessageIntercept.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary>
            客户端收到回复后
            </summary>
            <param name="reply">应答消息</param>
            <param name="correlationState"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MessageIntercept.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
            <summary>
            客户端发送前
            </summary>
            <param name="request">请求消息</param>
            <param name="channel">通道</param>
            <returns>null</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmMsg">
            <summary>
            消息框
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmMsg.m_IsChangeSize">
            <summary>
            是否修改过窗体显示大小
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmMsg.mouseOffset">
            <summary>
            记录鼠标指针的坐标
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmMsg.isMouseDown">
            <summary>
            记录鼠标按键是否按下
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMsg.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMsg.#ctor(Lenovo.HIS.Entities.EnumMsgType,System.String,System.String,Lenovo.HIS.Entities.EnumMsgBtnType,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            消息提醒
            </summary>
            <param name="msgType">类型</param>
            <param name="text">提示消息</param>
            <param name="title">提示标题</param>
            <param name="showBtn">显示按钮</param>
            <param name="focusBtn">焦点按钮</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMsg.fmMsg_Load(System.Object,System.EventArgs)">
            <summary>
            load
            </summary>
            <param name="sender">事件源</param>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMsg.btnYes_Click(System.Object,System.EventArgs)">
            <summary>
            确定按钮
            </summary>
            <param name="sender">事件源</param>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMsg.GetOffsetX(System.Windows.Forms.Control)">
            <summary>
            递归得到指定控件偏移量X值
            </summary>
            <param name="sender">指定的控件</param>
            <returns>移量X值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMsg.GetOffsetY(System.Windows.Forms.Control)">
            <summary>
            递归得到指定控件偏移量Y值
            </summary>
            <param name="sender">指定的控件</param>
            <returns>偏移量Y值</returns>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmMsg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMsg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmMsg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncPatient">
            <summary>
            患者信息相关公共处理 需要病人信息插件支持
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPatient.GetPatient(Lenovo.HIS.Entities.EntityPatient,System.Boolean,System.Int32)">
            <summary>
            查询患者信息
            </summary>
            <param name="patient">患者实体</param>
            <param name="NullCreate">为空时是否建档</param>
            <param name="showTab">  tabNavigationPage_patInfo = 1, 
                                    tabNavigationPage_other = 2, 
                                    tabNavigationPageIPInfo = 4,
                                    tabNavigationPage_patSign = 8
                showTab的值代表不同的显示tab的不同组合，例如 3 表示 _patInfo,_other 都会显示，5表示_patInfo,IPInfo会显示
            </param>
            <returns>-1:参数无效 0:没有匹配的患者 1:有匹配的患者 2:建档成功 3:建档失败 4:ESC退出 99:其他</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPatient.GetPatientByAction(Lenovo.HIS.Entities.EntityPatient,System.Boolean,System.Int32,System.Int32)">
            <summary>
            查询患者信息
            </summary>
            <param name="patient">患者实体</param>
            <param name="NullCreate">为空时是否建档</param>
            <param name="ActionSign">操作标识 0:建档不开户 1：建档开户 ..</param>
            <param name="showTab">  tabNavigationPage_patInfo = 1, 
                                    tabNavigationPage_other = 2, 
                                    tabNavigationPageIPInfo = 4,
                                    tabNavigationPage_patSign = 8
                showTab的值代表不同的显示tab的不同组合，例如 3 表示 _patInfo,_other 都会显示，5表示_patInfo,IPInfo会显示
            </param>
            <returns>-1:参数无效 0:没有匹配的患者 1:有匹配的患者 2:建档成功 3:建档失败 4:ESC退出 99:其他</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPatient.ShowPatient(Lenovo.HIS.Entities.EntityPatient,System.Boolean)">
            <summary>
            展示患者档案
            </summary>
            <param name="patient">需要包含患者代码</param>
            <param name="isEdit">是否编辑 默认false</param>
            <returns>-1:参数无效 0:没有匹配的患者 1:有匹配的患者 2:编辑成功 3:编辑失败 4:ESC退出 99:其他</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPatient.ShowPatient(Lenovo.HIS.Entities.EntityPatient,System.String,System.Boolean)">
            <summary>
            展示患者档案
            </summary>
            <param name="patient">患者实体</param>
            <param name="showTab">传递要显示的Tab序号，以竖线隔开，例如：1|2|3|4|5 1：基本信息  2：补充信息  3：附加信息  4：体格信息  5：过敏信息  6：住院信息  7：挂号记录  8：住院记录</param>
            <param name="isEdit">是否允许编辑</param>
            <returns> -1:参数无效 0:没有匹配的患者 1:有匹配的患者 2:编辑成功 3:编辑失败 4:ESC退出 99:其他</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPatient.ShowPatientIP(Lenovo.HIS.Entities.EntityPatient,System.Boolean)">
            <summary>
            患者卡片-住院信息
            </summary>
            <param name="patient">患者实体</param>
            <param name="isEdit">是否允许编辑</param>
            <returns> -1:参数无效 0:没有匹配的患者 1:有匹配的患者 2:编辑成功 3:编辑失败 4:ESC退出 99:其他</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPatient.ChangeCard(System.String)">
            <summary>
            患者切换卡，同时在弹出界面可绑卡
            </summary>
            <param name="patientCode">患者代码</param>
            <returns>患者卡实体</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPatient.ChangeCard2(System.String,System.String)">
            <summary>
            患者切换卡，同时在弹出界面可绑卡
            </summary>
            <param name="patientCode">患者代码</param>
            <param name="accCode">结算类型代码</param>
            <returns>患者卡实体</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPatient.ChangePatCardAccountType(System.String,System.String)">
            <summary>
            切换卡片的结算方式
            </summary>
            <param name="patientCode">患者代码</param>
            <param name="cardNumber">卡号</param>
            <returns>结算类型代码</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPatient.GetPatientNew(Lenovo.HIS.Entities.EntityPatient,System.Boolean,System.String)">
            <summary>
            读卡查询患者信息 磁条卡实体需要传入 卡号+读卡键,非磁条卡传入 读卡键
            </summary>
            <param name="patient">EntityPatient实体 磁条卡实体需要传入 卡号+读卡键,非磁条卡传入 读卡键</param>
            <param name="NullCreate">是否未查询到的时候进行建档</param>
            <param name="showTab">传递要显示的Tab序号，以竖线隔开，例如：1|2|3|4|5
            传递的顺序即显示的顺序
            1：基本信息  2：补充信息  3：附加信息  4：体格信息  5：过敏信息  6：住院信息  7：挂号记录  8：住院记录
            </param>
            <returns>-2没有挂载插件,-1 读卡错误,0 无信息 1 成功</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncReadCard">
            <summary>
            读卡相关功能
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.#cctor">
            <summary>
            Initializes the <see cref="T:Lenovo.HIS.cUtils.FuncReadCard"/> class.
            </summary>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.CreateAssembly">
            <summary>
            Creates the assembly.
            </summary>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadCardShow(Lenovo.HIS.Entities.EntityPatient,System.Boolean)">
            <summary>
            调出读卡方法,并读取患者信息
            </summary>
            <param name="patient">EntityPatient实体 磁条卡实体需要传入 卡号+读卡键,非磁条卡传入 读卡键</param>
            <param name="NullCreate">是否未查询到的时候进行建档</param>
            <returns>true 读到 false 未读到</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadCardNumber(Lenovo.HIS.Entities.EntityPatientCard)">
            <summary>
            调出读卡方法,只读卡信息
            </summary>
            <param name="card">卡信息</param>
            <returns>true 读到 false 未读到</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadCard(Lenovo.HIS.Entities.EntityPatient,System.Boolean)">
            <summary>
            读卡查询患者信息 磁条卡实体需要传入 卡号+读卡键,非磁条卡传入 读卡键
            </summary>
            <param name="patient">EntityPatient实体 磁条卡实体需要传入 卡号+读卡键,非磁条卡传入 读卡键</param>
            <param name="NullCreate">是否未查询到的时候进行建档</param>
            <returns>-2没有挂载插件,-1 读卡错误,0 无信息 1 成功</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadCard(Lenovo.HIS.Entities.EntityPatient,System.Boolean,System.Int32)">
            <summary>
            读卡查询患者信息 磁条卡实体需要传入 卡号+读卡键,非磁条卡传入 读卡键
            </summary>
            <param name="patient">EntityPatient实体 磁条卡实体需要传入 卡号+读卡键,非磁条卡传入 读卡键</param>
            <param name="NullCreate">是否未查询到的时候进行建档</param>
            <param name="showTab">  tabNavigationPage_patInfo = 1, 
                                    tabNavigationPage_other = 2, 
                                    tabNavigationPageIPInfo = 4,
                                    tabNavigationPage_patSign = 8
                showTab的值代表不同的显示tab的不同组合，例如 3 表示 _patInfo,_other 都会显示，5表示_patInfo,IPInfo会显示
            </param>
            <returns>-2没有挂载插件,-1 读卡错误,0 无信息 1 成功</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadCard(Lenovo.HIS.Entities.EntityPatient,System.Boolean,System.String)">
            <summary>
            读卡查询患者信息 磁条卡实体需要传入 卡号+读卡键,非磁条卡传入 读卡键
            </summary>
            <param name="patient">EntityPatient实体 磁条卡实体需要传入 卡号+读卡键,非磁条卡传入 读卡键</param>
            <param name="NullCreate">是否未查询到的时候进行建档</param>
            <param name="showTab">传递要显示的Tab序号，以竖线隔开，例如：1|2|3|4|5
            传递的顺序即显示的顺序
            1：基本信息  2：补充信息  3：附加信息  4：体格信息  5：过敏信息  6：住院信息  7：挂号记录  8：住院记录
            </param>
            <returns>-2没有挂载插件,-1 读卡错误,0 无信息 1 成功</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadCardCom(Lenovo.HIS.Entities.EntityPatient,System.Boolean,System.Object,System.Boolean)">
            <summary>
            读卡公用方法
            </summary>
            <param name="patient">患者实体</param>
            <param name="NullCreate">空时是否新建</param>
            <param name="showTab">传递要显示的Tab序号，以竖线隔开，例如：1|2|3|4|5 1：基本信息  2：补充信息  3：附加信息  4：体格信息  5：过敏信息  6：住院信息  7：挂号记录  8：住院记录</param>
            <param name="isNew">是否新的方式：为兼容老代码使用</param>
            <returns>-2没有挂载插件,-1 读卡错误,0 无信息 1 成功</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadIDCard(Lenovo.HIS.Entities.EntityIDCard)">
            <summary>
            读取身份证信息
            </summary>
            <param name="id">The identifier.</param>
            <returns>1：读取成功 2：设备未连接 3：未检测到身份证 4：读取失败 5:该身份证未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadSSCard(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取医保卡信息
            </summary>
            <param name="ss">医保卡实体<see cref="T:Lenovo.HIS.Entities.EntitySSCard">医保卡实体</see></param>
            <returns> 
            1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息
            </returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadPatientIDCard(System.String@)">
            <summary>
            读取就诊卡卡号
            </summary>
            <param name="patientID">病人ID</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadHealthCode(System.String@,System.String,System.String)">
            <summary>
            读取电子健康卡
            </summary>
            <param name="healthCode">The health code.</param>
            <param name="medks">The medks.</param>
            <param name="medStepCode">The med step code.</param>
            <returns>1：读取成功 2：设备未连接 3：未检测到身份证 4：读取失败 5:该身份证未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadAnyoneOfCards(System.String@,Lenovo.HIS.Entities.EntityIDCard,Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            先读入就诊卡，再读身份证，最后读入医保卡，一旦查找到对应卡片则停止读卡，并返回该卡片信息
            </summary>
            <param name="patientID">The patient identifier.</param>
            <param name="id">The identifier.</param>
            <param name="ss">The ss.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadAnyoneOfCardsInfo(System.String@,Lenovo.HIS.Entities.EntityIDCard,Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            先读入就诊卡，最后读入医保卡，再读身份证，一旦查找到对应卡片则停止读卡，并返回该卡片信息
            </summary>
            <param name="patientID">The patient identifier.</param>
            <param name="id">The identifier.</param>
            <param name="ss">The ss.</param>
            <returns>卡类型</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadSheBaoCode(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取电子医保凭证
            </summary>
            <param name="ss">卡信息</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadYNZYYIDCard(Lenovo.HIS.Entities.EntityIDCard)">
            <summary>
            读取身份证信息
            </summary>
            <param name="id">The identifier.</param>
            <returns>1：读取成功 2：设备未连接 3：未检测到身份证 4：读取失败 5:该身份证未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadYNZYYSSCard(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取医保卡信息
            </summary>
            <param name="ss">The ss.</param>
            <returns> 1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadYNZYYPatientIDCard(System.String@)">
            <summary>
            读取就诊卡卡号
            </summary>
            <param name="patientID">病人ID</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadYNZYYHealthCode(System.String@,System.String,System.String)">
            <summary>
            读取电子健康码
            </summary>
            <param name="healthCode">The health code.</param>
            <param name="medks">The medks.</param>
            <param name="medSetpCode">The med setp code.</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadYNZYYAnyoneOfCards(System.String@,Lenovo.HIS.Entities.EntityIDCard,Lenovo.HIS.Entities.EntitySSCard,System.String,System.String)">
            <summary>
            先读入就诊卡，再读身份证，最后读入医保卡，一旦查找到对应卡片则停止读卡，并返回该卡片信息
            </summary>
            <param name="patientID">The patient identifier.</param>
            <param name="id">The identifier.</param>
            <param name="ss">The ss.</param>
            <param name="medks">The medks.</param>
            <param name="medStepCode">The med step code.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.CheckCardDevice">
            <summary>
            检查读卡器是否准备好
            </summary>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.CheckPatientIDDevice">
            <summary>
            检查就诊卡读卡器
            </summary>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.CheckIDDevice">
            <summary>
            检查身份证读卡器
            </summary>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.CheckJHDevice">
            <summary>
            检查读卡器设备是否连接正常
            </summary>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadJHIDCard(Lenovo.HIS.Entities.EntityIDCard)">
            <summary>
            读取身份证信息
            </summary>
            <param name="id">The identifier.</param>
            <returns>1：读取成功 2：设备未连接 3：未检测到身份证 4：读取失败 5:该身份证未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadJHSSCard(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取医保卡信息
            </summary>
            <param name="ss">The ss.</param>
            <returns> 1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadJHPatientIDCard(System.String@)">
            <summary>
            读取就诊卡卡号
            </summary>
            <param name="patientID">病人ID</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadJHAnyoneOfCards(System.String@,Lenovo.HIS.Entities.EntityIDCard,Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            先读入就诊卡，再读身份证，最后读入医保卡，一旦查找到对应卡片则停止读卡，并返回该卡片信息
            </summary>
            <param name="patientID">The patient identifier.</param>
            <param name="id">The identifier.</param>
            <param name="ss">The ss.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.GetHealthCodeCardNumber(System.String)">
            <summary>
            根据健康码vuid值读取到对应虚拟卡号
            </summary>
            <param name="vuid">The vuid.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.GetHealthCodeCardNumberByCodeContent(System.String,System.String,System.String)">
            <summary>
            根据健康码内容读取到对应虚拟卡号
            </summary>
            <param name="content">The content.</param>
            <param name="medks">The medks.</param>
            <param name="medStepCode">The med step code.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadJHHHHealthCode(System.String@,System.String@)">
            <summary>
            读取电子健康码
            </summary>
            <param name="healthCode">The health code.</param>
            <param name="idNumber">The identifier number.</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadJHHHSheBaoCode(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取电子医保凭证
            </summary>
            <param name="ss">卡信息</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadWDXAnyoneOfCards(System.String@,Lenovo.HIS.Entities.EntityIDCard,Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            先读入就诊卡，再读身份证，最后读入医保卡，一旦查找到对应卡片则停止读卡，并返回该卡片信息
            </summary>
            <param name="patientID">The patient identifier.</param>
            <param name="id">The identifier.</param>
            <param name="ss">The ss.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadWDXPatientIDCard(System.String@)">
            <summary>
            读取就诊卡卡号
            </summary>
            <param name="patientID">病人ID</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadWDXSSCard(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取医保卡信息
            </summary>
            <param name="ss">The ss.</param>
            <returns> 1：读取成功  -1：读卡失败</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadWDIDCard(Lenovo.HIS.Entities.EntityIDCard)">
            <summary>
            读取身份证信息
            </summary>
            <param name="id">The identifier.</param>
            <returns>1：读取成功 2：设备未连接 3：未检测到身份证 4：读取失败 5:该身份证未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadWDBankIDCard(System.String@)">
            <summary>
            读取银行卡
            </summary>
            <param name="patientID">病人ID</param>
            <returns>1：读取成功 -1读取失败</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadSYPDAnyoneOfCards(System.String@,Lenovo.HIS.Entities.EntityIDCard,Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            先读入就诊卡，最后读入医保卡，再读身份证，一旦查找到对应卡片则停止读卡，并返回该卡片信息
            </summary>
            <param name="patientID">The patient identifier.</param>
            <param name="id">The identifier.</param>
            <param name="ss">The ss.</param>
            <returns>卡类型</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadSYPDPatientIDCard(System.String@)">
            <summary>
            读取就诊卡卡号
            </summary>
            <param name="patientID">病人ID</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadSYPDSSCard(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取医保卡信息
            </summary>
            <param name="ss">The ss.</param>
            <returns> 1：读取成功  -1：读卡失败</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadSYPDIDCard(Lenovo.HIS.Entities.EntityIDCard)">
            <summary>
            读取身份证信息
            </summary>
            <param name="id">The identifier.</param>
            <returns>1：读取成功 2：设备未连接 3：未检测到身份证 4：读取失败 5:该身份证未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadSYPDSheBaoCode(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取电子医保凭证
            </summary>
            <param name="ss">卡信息</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadQMXYYAnyoneOfCards(System.String@,Lenovo.HIS.Entities.EntityIDCard,Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            先读入就诊卡，最后读入医保卡，再读身份证，一旦查找到对应卡片则停止读卡，并返回该卡片信息
            </summary>
            <param name="patientID">The patient identifier.</param>
            <param name="id">The identifier.</param>
            <param name="ss">The ss.</param>
            <returns>卡类型</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadQMXYYESSCard(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取医保卡信息
            </summary>
            <param name="ss">The ss.</param>
            <returns> 1：读取成功  -1：读卡失败</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadQMXYYPatientIDCard(System.String@)">
            <summary>
            读取就诊卡卡号
            </summary>
            <param name="patientID">病人ID</param>
            <returns>1：读取成功， 2：初始化失败， 3：未找到对应类型的卡  4:卡片未包含可用信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadQMXYYSSCard(Lenovo.HIS.Entities.EntitySSCard)">
            <summary>
            读取医保卡信息
            </summary>
            <param name="ss">The ss.</param>
            <returns> 1：读取成功  -1：读卡失败</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReadCard.ReadQMXYYIDCard(Lenovo.HIS.Entities.EntityIDCard)">
            <summary>
            读取身份证信息
            </summary>
            <param name="id">The identifier.</param>
            <returns>1：读取成功 2：设备未连接 3：未检测到身份证 4：读取失败 5:该身份证未包含可用信息</returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:Lenovo.HIS.cUtils.ClientBusiness">
            <summary>
            客户端通讯类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ClientBusiness.QueryGridData(System.String)">
            <summary>
            查询样式数据
            </summary>
            <param name="ids">样式id列表</param>
            <returns>样式列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ClientBusiness.OperatGridData(System.Collections.Generic.List{Lenovo.HIS.cUtils.EntityGridDisplay})">
            <summary>
            样式数据操作  增删改
            </summary>
            <param name="_list">样式列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ClientBusiness.CheckTable">
            <summary>
            检查是否存在表
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.InitBusiness">
            <summary>
            数据初始化
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetTableAll(System.String,System.String)">
            <summary>
            根据表名，全表加载数据,基础数据用
            </summary>
            <param name="tableName">表名</param>
            <param name="TimeSignName">时间戳字段</param>
            <returns>数据结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetTableAllByTime(System.String,System.String,System.DateTime,Lenovo.HIS.cUtils.DBName)">
            <summary>
            本地缓存获取单表数据
            </summary>
            <param name="tableName">表明</param>
            <param name="timeSignName">LastModifyTime字段名</param>
            <param name="dt">时间</param>
            <param name="dbname">数据库链接</param>
            <returns>数据结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetTableFiledsByWhere(System.String,System.String,System.String,Lenovo.HIS.cUtils.DBName)">
            <summary>
            查询数据
            </summary>
            <param name="tableName">表名</param>
            <param name="filedNames">字段</param>
            <param name="sqlWhere">条件</param>
            <param name="dbname">数据库链接</param>
            <returns>数据结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetTableAll(System.String,System.DateTime)">
            <summary>
            根据表名 时间线加载数据
            </summary>
            <param name="tableName">表名</param>
            <param name="dtime">时间</param>
            <returns>数据结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetTableAllByField(System.String,System.String,System.String)">
            <summary>
            根据表名，字段限制，全表加载数据 基础数据用
            </summary>
            <param name="tableName">表名</param>
            <param name="filedName">字段</param>
            <param name="Value">值</param>
            <returns>数据结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetMenuInfo(System.String)">
            <summary>
            获取menu
            </summary>
            <param name="appCode">应用代码</param>
            <returns>菜单列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.BatchInsert(System.Data.DataTable,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            批量插入数据
            </summary>
            <param name="dt">要保存的数据</param>
            <param name="tableName">数据库表名</param>
            <param name="listDBColumnName">数据库列名列表，必须和dt列数相同</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetTableStructure(System.String,System.String)">
            <summary>
            获取表结构
            </summary>
            <param name="userId">用户ID</param>
            <param name="tableName">表名</param>
            <returns>表结构结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetCNArea">
            <summary>
            获取街道信息
            </summary>
            <returns>街道列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetICD10">
            <summary>
            获取ICD10
            </summary>
            <returns>icd10列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetTCD">
            <summary>
            获取TCD信息
            </summary>
            <returns>tcd列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetState">
            <summary>
            获取国家
            </summary>
            <returns>国家列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetNation">
            <summary>
            民族
            </summary>
            <returns>民族列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetDoctor">
            <summary>
            获取医生信息
            </summary>
            <returns>医生列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetNurse">
            <summary>
            获取护士信息
            </summary>
            <returns>护士列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetDepts">
            <summary>
            获取科室信息
            </summary>
            <returns>科室列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetUsers">
            <summary>
            获取所有用户信息
            </summary>
            <returns>用户列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetUserToRoleList">
            <summary>
            获取所有用户角色信息
            </summary>
            <returns>用户列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetUsersPho(System.Int32)">
            <summary>
            获取用户照片
            </summary>
            <param name="userid">用户ID</param>
            <returns>人员头像</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetChargesTimePoint(System.DateTime)">
            <summary>
            获取收费项目
            </summary>
            <param name="dt">时间</param>
            <returns>收费项目列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetCharges(System.DateTime,System.Int32)">
            <summary>
            获取院区收费项目
            </summary>
            <param name="dt">时间</param>
            <param name="areaId">院区ID</param>
            <returns>收费项目列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetDrugs(System.String,System.DateTime)">
            <summary>
            药品
            </summary>
            <param name="ViewName">视图名</param>
            <param name="dt">时间</param>
            <returns>药品列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetBaseDrugs(System.String,System.DateTime)">
            <summary>
            基础药品
            </summary>
            <param name="ViewName">视图名</param>
            <param name="dt">时间</param>
            <returns>药典列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetDrugsAlias(System.String,System.DateTime)">
            <summary>
            药品别名
            </summary>
            <param name="ViewName">视图名</param>
            <param name="dt">时间</param>
            <returns>药品别名列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetChargePackages(System.DateTime,System.Int32)">
            <summary>
            收费项目包装信息
            </summary>
            <param name="dt">时间</param>
            <param name="areaId">院区ID</param>
            <returns>包装信息列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetChargePackageDetails(System.DateTime,System.Int32)">
            <summary>
            收费项目明细信息
            </summary>
            <param name="dt">时间</param>
            <param name="areaId">院区ID</param>
            <returns>收费项目套餐明细列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetChargeList(System.DateTime,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            收费项目列表
            </summary>
            <param name="chargeUpdateTime">收费项目最后时间</param>
            <param name="ipopUpdateTime">药典最后时间</param>
            <param name="ipopAliasUpdateTime">药品带别名</param>
            <param name="areaID">院区ID</param>
            <returns>收费项目列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetChargeListServer(System.Int32)">
            <summary>
            服务端缓存的收费项目列表
            </summary>
            <param name="areaID">院区ID</param>
            <returns>收费项目列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetChargesExternServer(System.String)">
            <summary>
            服务端缓存的收费项目扩展信息列表
            </summary>
            <param name="areaCode">院区ID</param>
            <returns>收费项目扩展信息列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetNoticeInfo">
            <summary>
            获取公告信息
            </summary>
            <returns>公告列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetNoticeUser(System.String)">
            <summary>
            获取用户公告信息
            </summary>
            <param name="sqlWhere">条件</param>
            <returns>公告列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.SaveNoticeUser(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityNoticeUser})">
            <summary>
            保存用户公告信息
            </summary>
            <param name="noticeUser">用户公告列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetMSGGroup">
            <summary>
            消息分组信息
            </summary>
            <returns>消息分组列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetMSGGroupMember">
            <summary>
            消息人员分组
            </summary>
            <returns>人员分组列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetSmsContent">
            <summary>
            查询短信集合
            </summary>
            <returns>短信内容列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetTransactionLogs(System.String,System.String,System.String)">
            <summary>
            获取日志
            </summary>
            <param name="from">开始时间</param>
            <param name="to">截止时间</param>
            <param name="ip">IP</param>
            <returns>日志列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.DeleteTransactionLogs(System.String,System.String,System.String)">
            <summary>
            删除日志
            </summary>
            <param name="from">开始时间</param>
            <param name="to">截止时间</param>
            <param name="ip">IP</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetAppWcfs">
            <summary>
            获取App对应wcf信息
            </summary>
            <returns>wcf配置列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetSwitches(System.String[])">
            <summary>
            获取开关信息
            </summary>
            <param name="keys">服务名信息</param>
            <returns>开关列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetSQLTraceLogs(Lenovo.HIS.Entities.EntityLogWhere)">
            <summary>
            查询日志
            </summary>
            <param name="logWhere">应用</param>
            <returns>日志内容</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.GetAllPatBadCredit(System.String)">
            <summary>
            患者不良信息查询
            </summary>
            <param name="patcode">患者代码</param>
            <returns>不良信息列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusiness.AddPatBadCredit(Lenovo.HIS.Entities.EntityPatBadCredit)">
            <summary>
            新增患者不良信息
            </summary>
            <param name="pbc">患者不良信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.InitBusinessCache">
            <summary>
            收费项目缓存类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusinessCache.GetChargeListByServer(System.Int32)">
            <summary>
            获取收费项目
            </summary>
            <param name="areaID">院区ID</param>
            <returns>收费项目集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.InitBusinessCache.GetChargesExternByServer(System.String)">
            <summary>
            获取收费项目扩展信息
            </summary>
            <param name="areaCode">院区代码</param>
            <returns>收费项目扩展集合</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.LogBusiness">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LogBusiness.getLogSetting(System.Int32,System.String)">
            <summary>
            获取设置信息
            </summary>
            <param name="clientID">客户端ID</param>
            <param name="appCode">应用ID</param>
            <returns>日志设置列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LogBusiness.getAllDefaultSetting(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityLogSetting},System.Int32,System.String,System.Collections.Generic.List{Lenovo.HIS.Entities.EntityLogSetting})">
            <summary>
            设置默认值
            </summary>
            <param name="lst">设置列表</param>
            <param name="clientID">客户端ID</param>
            <param name="appCode">应用代码</param>
            <param name="listDef">默认配置列表</param>
            <returns>默认设置集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LogBusiness.saveLogSetting(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityLogSetting})">
            <summary>
            保存日志设置
            </summary>
            <param name="listLogSetting">设置列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LogBusiness.SaveLogInfo(Lenovo.HIS.Entities.EntityLogCS)">
            <summary>
            日志保存
            </summary>
            <param name="Logcs">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UtilsBusiness">
            <summary>
            配置业务处理类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.GetDbDateTime">
            <summary>
            获取时间
            </summary>
            <returns>时间</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.GetSequence(Lenovo.HIS.Entities.EnumSequencecs,System.String,System.String,System.String,System.String)">
            <summary>
            获取Sequence
            </summary>
            <param name="seq">库或前缀，例如HIS、CIS等</param>
            <param name="typeName">类型名称</param>
            <param name="descname">描述</param>
            <param name="tableName">表名</param>
            <param name="columnName">列名</param>
            <returns>Sequence值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.GetSequenceList(Lenovo.HIS.Entities.EnumSequencecs,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            批量获取Sequence
            </summary>
            <param name="seq">库或前缀，例如HIS、CIS等</param>
            <param name="typeName">类型名称</param>
            <param name="descname">描述</param>
            <param name="tableName">表名</param>
            <param name="columnName">列名</param>
            <param name="count">数量</param>
            <returns>Sequence值列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.GetConfig(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            获取配置值
            </summary>
            <param name="config">配置信息</param>
            <returns>配置值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.UpdateConfig(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityConfig})">
            <summary>
            更新配置
            </summary>
            <param name="listconfig">配置列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.UpdateConfigActiveTime(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            更新配置活动时间
            </summary>
            <param name="config">配置信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.DeleteConfig(System.DateTime)">
            <summary>
            删除配置
            </summary>
            <param name="date">删除时间</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.GetAllConfig(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            根据条件获取所有配置
            </summary>
            <param name="config">配置信息</param>
            <returns>配置集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.GetGlobalConfigByName(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            根据条件获取全局配置
            </summary>
            <param name="config">配置信息</param>
            <returns>配置集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.GetConfigs(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            获取所有配置信息
            </summary>
            <param name="config">配置信息</param>
            <returns>配置集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.GetConfigsList(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            获取所有配置信息
            </summary>
            <param name="config">配置信息</param>
            <returns>配置集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.ModifyApp(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityApp})">
            <summary>
            ModifyApp
            </summary>
            <param name="appList">应用列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.ModifyAppSSO(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityApp})">
            <summary>
            修改应用SSO
            </summary>
            <param name="appList">应用列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.ModifyMenu(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityMenu})">
            <summary>
            修改菜单信息
            </summary>
            <param name="menuList">菜单信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.ModifyMenuSSO(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityMenu})">
            <summary>
            ModifyMenu
            </summary>
            <param name="menuList">菜单系信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.RegisterMenu(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityMenu})">
            <summary>
            注册菜单
            </summary>
            <param name="menuList">菜单列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.SaveMenuHelp(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityMenuHelp})">
            <summary>
            保存菜单帮助信息
            </summary>
            <param name="menuList">菜单帮助信息列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.PluginInsert(Lenovo.HIS.Entities.EntityPlugin)">
            <summary>
            插件新增
            </summary>
            <param name="plugin">插件信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.PluginUpdate(Lenovo.HIS.Entities.EntityPlugin)">
            <summary>
            插件修改
            </summary>
            <param name="plugin">插件信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.HotkeySet(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityHotkey})">
            <summary>
            快捷键设置
            </summary>
            <param name="listHotkey">快捷键列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.HotkeySelect(System.String,System.Int32)">
            <summary>
            获取当前个人快捷键设置
            </summary>
            <param name="appcode">应用代码</param>
            <param name="userID">用户ID</param>
            <returns>快捷键集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.KeyTipSet(Lenovo.HIS.Entities.EntityMenu)">
            <summary>
            菜单快捷键提示上设置
            </summary>
            <param name="menu">菜单信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.KeyTipSelect(Lenovo.HIS.Entities.EntityMenu)">
            <summary>
            菜单快捷键提示查询
            </summary>
            <param name="menu">菜单信息</param>
            <returns>菜单信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.PermissionAdd(Lenovo.HIS.Entities.EntityPerm)">
            <summary>
            添加权限
            </summary>
            <param name="perm">权限信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.SaveDefaultMenu(Lenovo.HIS.Entities.EntityDefaultMenu)">
            <summary>
            保存用户默认菜单
            </summary>
            <param name="dfMenu">默认菜单</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.QueryComByWhere(System.String,System.String,System.String)">
            <summary>
            通用查询
            </summary>
            <param name="TbName">表名</param>
            <param name="SqlWhere">查询条件</param>
            <param name="ColNames">列名称集合，逗号隔开，例如：Code,Name,PyCode,WbCode</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.QueryData(Lenovo.HIS.Entities.EntityReport)">
            <summary>
            查询数据
            </summary>
            <param name="report">报表</param>
            <returns>报表集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.AddTransactionLog(Lenovo.HIS.Entities.EntityTransactionLog)">
            <summary>
            添加业务日志
            </summary>
            <param name="log">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.CanTransactionLog(Lenovo.HIS.Entities.EntityTransactionLog)">
            <summary>
            判断是否可以添加该服务对应业务日志
            </summary>
            <param name="log">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.SaveSmsSendLog(Lenovo.HIS.Entities.EntitySmsSendLog)">
            <summary>
            保存短信日志
            </summary>
            <param name="log">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.GetLogSwitches(System.String)">
            <summary>
            获取日志开关
            </summary>
            <param name="ip">IP</param>
            <returns>日志开关集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.AddLogSwitch(Lenovo.HIS.Entities.EntityLogSwitch)">
            <summary>
            新增日志开关
            </summary>
            <param name="ls">日志开关信息</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.UpdateLogSwitch(Lenovo.HIS.Entities.EntityLogSwitch)">
            <summary>
            更新日志开关
            </summary>
            <param name="ls">日志开关信息</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.SetSQLlogRedis(Lenovo.HIS.Entities.EntityLogInf)">
            <summary>
            sql日志跟踪设置，客户端不直接写redis，通过该方法写，只在服务端增加redis配置即可
            系统登录时写入redis客户端ID
            快捷键 CTR+ALT+L 开启记录日志（默认记录30分钟），服务端根据客户端ID判断是否记录该客户端的日志
            </summary>
            <param name="logInf">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.getSQLlogRedis(System.Int32)">
            <summary>
            获取客户端的应用开启关闭配置
            </summary>
            <param name="clientID">客户端ID</param>
            <returns>开启关闭配置集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.SaveLoginLog(Lenovo.HIS.Entities.EntityLoginInf)">
            <summary>
            保存登录退出日志
            </summary>
            <param name="log">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.AddLoginLog(System.Object)">
            <summary>
            记录登录日志(异步)
            </summary>
            <param name="obj">The object.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtilsBusiness.AddLogOutLog(System.Object)">
            <summary>
            记录退出日志(异步)
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmDialogForm">
            <summary>
            自定义扩展窗体
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmDialogForm.mouseOffset">
            <summary>
            记录鼠标指针的坐标
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmDialogForm.isMouseDown">
            <summary>
            记录鼠标按键是否按下
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmDialogForm.m_DrawClose">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            按键事件
            </summary>
            <param name="msg">消息</param>
            <param name="keyData">键</param>
            <returns>bool</returns>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmDialogForm.CloseBoxRect">
            <summary>
            返回窗体关闭系统按钮所在的坐标矩形
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmDialogForm.MinimiziBoxRect">
            <summary>
            返回窗体最小化系统按钮所在的坐标矩形
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmDialogForm.FormBorderStyle">
            <summary>
            边框样式
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.OnLoad(System.EventArgs)">
            <summary>
            加载
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.OnSizeChanged(System.EventArgs)">
            <summary>
            大小改变
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标移动
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标点击
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标抬起
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.OnMouseLeave(System.EventArgs)">
            <summary>
            鼠标滑过
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            鼠标位置
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.Dispose(System.Boolean)">
            <summary>
            释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            键盘按下
            </summary>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.InitializeComponent">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.UpdateSystemButtonRect">
            <summary>
            更新样式
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.GetOffsetX(System.Windows.Forms.Control)">
            <summary>
            递归得到指定控件偏移量X值
            </summary>
            <param name="sender">指定的控件</param>
            <returns>偏移量X值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.GetOffsetY(System.Windows.Forms.Control)">
            <summary>
            递归得到指定控件偏移量Y值
            </summary>
            <param name="sender">指定的控件</param>
            <returns>偏移量Y值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmDialogForm.ControlMoveEvent(System.Windows.Forms.Control)">
            <summary>
            控件move事件绑定 点击控件拖动鼠标 实现整个窗体拖动效果 
            </summary>
            <param name="cl">绑定的控件</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmInform">
            <summary>
            公告、日志、通知等信息
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmInform.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmInform.#ctor(Lenovo.HIS.Entities.EntityUser)">
            <summary>
            构造
            </summary>
            <param name="user">用户信息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmInform.fmInform_Load(System.Object,System.EventArgs)">
            <summary>
            加载事件
            </summary>
            <param name="sender">事件源</param>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmInform._pnl_ClickEvent(System.Object,System.EventArgs)">
            <summary>
            左侧分类
            </summary>
            <param name="sender">事件源</param>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmInform.SetShowLookInfo(System.Windows.Forms.Control,System.String,System.Boolean)">
            <summary>
            找到控件并显示内容
            </summary>
            <param name="ctl">控件</param>
            <param name="showInfo">显示信息</param>
            <param name="visible">是否显示</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmInform.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmInform.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmInform.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmBase">
            <summary>
            窗体基类
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmBase.m_ShortcutKeys">
            <summary>
            快捷键集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmBase.IsLoadPlugins">
            <summary>
            是否已经初始化窗体插件
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmBase.m_ListPlugin">
            <summary>
            窗体插件集合
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmBase.m_PluginDelegate">
            <summary>
            插件委托类
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmBase.ShowWarningMsg">
            <summary>
            关闭时是否显示提示信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmBase.DefaultMenuEnable">
            <summary>
            是否允许设置成默认打开
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmBase.MenuId">
            <summary>
            菜单唯一ID，非菜单表中的ID
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.fmBase.ToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.FmUseTimeLog2(System.String,System.String,System.String)">
            <summary>
            窗体加载耗时（异步记录）
            </summary>
            <param name="stTm">构造耗时</param>
            <param name="ldTm">Load耗时</param>
            <param name="flName">窗体类名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            按键触发
            </summary>
            <param name="msg">消息</param>
            <param name="keyData">键</param>
            <returns>是否响应</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.Dispose(System.Boolean)">
            <summary>
            释放信息
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.SkipRefresh(System.Object[])">
            <summary>
            跳转时候自动调用，自动刷新页面
            </summary>
            <param name="args">参数集合</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.TabChangeRefresh">
            <summary>
            新打开菜单时，自动刷新页面
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.TabChangeRefresh2">
            <summary>
            菜单tab切换时自动调用，自动刷新页面
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.MQListen(System.Object[])">
            <summary>
            接收消息后是否展示
            </summary>
            <param name="args">消息内容包</param>
            <returns>true false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.MQAction(System.Object[])">
            <summary>
            接收action类消息后调用
            </summary>
            <param name="args">参数集合</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.Log4Helper">
            <summary>
            log4帮助类
            <group>log(日志)</group>
            <obsolete>弃用该类，请使用FuncLoggerHelper进行日志记录</obsolete>
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Log4Helper.Write">
            <summary>
            写日志
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Error(System.Object)">
            <summary>
            记录错误日志
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Error(System.Object,System.String)">
            <summary>
            记录错误日志
            </summary>
            <param name="message">信息</param>
            <param name="folderName">文件夹名字（LogsRecord下的文件夹名称）</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Error(System.Object,System.Exception)">
            <summary>
            记录错误日志
            </summary>
            <param name="message">信息</param>
            <param name="ex">错误信息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Error(System.Object,System.Exception,System.String)">
            <summary>
            记录错误日志
            </summary>
            <param name="message">信息</param>
            <param name="ex">错误信息</param>
            <param name="folderName">文件夹名字（LogsRecord下的文件夹名称）</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.ErrorFormat(System.String,System.Object[])">
            <summary>
            错误信息格式化
            </summary>
            <param name="format">格式</param>
            <param name="args">参数数组</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.ErrorOther(System.Object)">
            <summary>
            记录错误日志
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Debug(System.Object)">
            <summary>
            debug日志
            </summary>
            <param name="message">内容</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Debug(System.Object,System.String)">
            <summary>
            debug日志
            </summary>
            <param name="message">内容</param>
            <param name="folderName">文件夹名字（LogsRecord下的文件夹名称）</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Debug(System.Object,System.Exception)">
            <summary>
            debug日志带错误信息
            </summary>
            <param name="message">记录消息</param>
            <param name="ex">错误信息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Debug(System.Object,System.Exception,System.String)">
            <summary>
            debug日志带错误信息
            </summary>
            <param name="message">记录消息</param>
            <param name="ex">错误信息</param>
            <param name="folderName">文件夹名字（LogsRecord下的文件夹名称）</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.DebugFormat(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format">格式</param>
            <param name="args">参数数组</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Fatal(System.Object)">
            <summary>
            致命错误
            </summary>
            <param name="message">内容</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Fatal(System.Object,System.String)">
            <summary>
            致命错误
            </summary>
            <param name="message">内容</param>
            <param name="folderName">文件名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Fatal(System.Object,System.Exception)">
            <summary>
            致命错误
            </summary>
            <param name="message">内容</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Fatal(System.Object,System.Exception,System.String)">
            <summary>
            致命错误
            </summary>
            <param name="message">内容</param>
            <param name="ex">异常</param>
            <param name="folderName">文件名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.FatalFormat(System.String,System.Object[])">
            <summary>
            致命错误
            </summary>
            <param name="format">格式</param>
            <param name="args">参数数组</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Info(System.Object)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Info(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
            <param name="folderName">文件名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Info(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Info(System.Object,System.Exception,System.String)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
            <param name="ex">异常</param>
            <param name="folderName">文件名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.InfoFormat(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format">格式</param>
            <param name="args">参数数组</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.InfoOther(System.Object)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.InfoOther(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
            <param name="folderName">文件名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Warn(System.Object)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Warn(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
            <param name="folderName">文件名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Warn(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.Warn(System.Object,System.Exception,System.String)">
            <summary>
            
            </summary>
            <param name="message">内容</param>
            <param name="ex">异常</param>
            <param name="folderName">文件名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.WarnFormat(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format">格式</param>
            <param name="args">参数数组</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.Log4Helper.LogWriterDb(Lenovo.HIS.Entities.EnumLogSmallType,System.Object)">
            <summary>
            日志记录数据库
            </summary>
            <param name="logtype">日志类型</param>
            <param name="message">日志内容</param>
            <returns>是否需要记录本地   true需要  false不需要</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.LoginBusiness">
            <summary>
            登陆业务
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetPermByUser(System.Int32)">
            <summary>
            获取用户所有权限
            </summary>
            <param name="UserId">用户工号</param>
            <returns>人员权限</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetPermByUserList(System.Int32)">
            <summary>
            获取用户所有权限
            </summary>
            <param name="UserId">用户工号</param>
            <returns>人员权限</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetAppInfo">
            <summary>
            获取APP信息
            </summary>
            <returns>APP列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetAllClient">
            <summary>
            获取所有客户端信息
            </summary>
            <returns>客户端列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetLoginUser(System.String)">
            <summary>
            获取登录用户
            </summary>
            <param name="number">工号</param>
            <returns>人员信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.UpdateUser(Lenovo.HIS.Entities.EntityUser)">
            <summary>
            修改登陆用户
            </summary>
            <param name="user">用户信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.InsertReg(Lenovo.HIS.Entities.EntityClient)">
            <summary>
            注册
            </summary>
            <param name="client">客户端信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.ModifyReg(Lenovo.HIS.Entities.EntityClient)">
            <summary>
            重新注册
            </summary>
            <param name="client">客户端信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetClientIP">
            <summary>
            获取IP
            </summary>
            <returns>IP地址</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetClientIP2">
            <summary>
            获取IP
            </summary>
            <returns>IP地址</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetWcfConfigs">
            <summary>
            获取WCFconfig信息
            </summary>
            <returns>WCFconfig信息集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetClientInfo(System.String,System.String,System.String,System.String)">
            <summary>
            获取客户端注册信息
            </summary>
            <param name="hostName">机器名</param>
            <param name="IpAddress">IP地址</param>
            <param name="MACAdress">mac地址</param>
            <param name="_regType">客户端获取配置的模式，机器名、IP、MAC，按照那种模式获取对应的值就不能为空</param>
            <returns>客户端注册信息集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetDefaultMenuByUser(System.Int32)">
            <summary>
            获取用户默认菜单
            </summary>
            <param name="UserId">用户ID</param>
            <returns>用户默认菜单集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.LoginBusiness.GetAdmin(System.Int32)">
            <summary>
            根据工号获取管理员
            </summary>
            <param name="adminId">管理员id</param>
            <returns>管理员信息</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.ProxyBaseCache">
            <summary>
            公共服务代理
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyBaseCache.#ctor(System.String)">
            <summary>
            公共服务代理 <see cref="T:Lenovo.HIS.cUtils.ProxyBaseCache"/> class.
            </summary>
            <param name="wcfAddress">The WCF address.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:Lenovo.HIS.cUtils.ProxyInitCache">
            <summary>
            代理类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInitCache.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInitCache.GetChargeListByServer(System.Int32)">
            <summary>
            查询收费项目列表
            </summary>
            <param name="areaID">院区ID</param>
            <returns>收费项目集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInitCache.GetChargesExternByServer(System.String)">
            <summary>
            查询收费项目扩展信息
            </summary>
            <param name="areaCode">院区代码</param>
            <returns>收费项目扩展信息集合</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.ProxyLog">
            <summary>
            日志通讯类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLog.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLog.getLogSetting(System.Int32,System.String)">
            <summary>
            获取设置信息
            </summary>
            <param name="clientID">客户端ID</param>
            <param name="appCode">应用ID</param>
            <returns>日志设置信息集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLog.getLogSettingDef">
            <summary>
            获取设置信息（默认配置）
            </summary>
            <returns>日志设置信息集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLog.SaveLogSetting(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityLogSetting})">
            <summary>
            保存设置信息
            </summary>
            <param name="lstLog">日志设置信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLog.SaveLogInfo(Lenovo.HIS.Entities.EntityLogCS)">
            <summary>
            日志保存
            </summary>
            <param name="Logcs">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.ProxyUser">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUser.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUser.GetUserCertPicture(System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="userCertId">用户证书ID</param>
            <returns>登录人信息</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.BaseVar">
            <summary>
            基础全局变量 底层用
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.BaseVar.g_ListAllApp">
            <summary>
            所有应用程序集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.BaseVar.g_ListAllMenu">
            <summary>
            所有应用的菜单信息集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.BaseVar.g_InformForm">
            <summary>
            消息form
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.BaseVar.g_AllPlugin">
            <summary>
            所有插件集合
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.UtiltsPlugin">
            <summary>
            公共插件类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtiltsPlugin.#ctor">
            <summary>
            加载插件
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtiltsPlugin.YBTest">
            <summary>
            医保插件测试
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtiltsPlugin.ZKTest(System.String[])">
            <summary>
            折扣插件测试
            </summary>
            <param name="_str">The string.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtiltsPlugin.GetCAToken">
            <summary>
            获取CAToken
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.UtiltsPlugin.CAAuth(System.String)">
            <summary>
            认证登录
            </summary>
            <param name="userNumber">The user number.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:Lenovo.HIS.cUtils.PubVarThird">
            <summary>
            客户端第三方缓存全局变量
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVarThird.g_token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVarThird.g_transactionId">
            <summary>
            签署事务编号
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVarThird.g_authKEY">
            <summary>
            授权密钥
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVarThird.g_authEndTime">
            <summary>
            授权结束
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVarThird.g_CA_UserCert">
             <summary>
            用户证书数据
             </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVarThird.g_CA_CertID">
            <summary>
            证书ID
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.Resource1">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Resource1.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Resource1.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Resource1.Group2">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Resource1.Icon1">
            <summary>
              查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Resource1.ImageClose">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Resource1.Warning_16x16">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Resource1.Warning_32x32">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Resource1.平安联想背景">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.Resource1.登录页背景3_copy">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncExcelHelper">
            <summary>
            Excel操作相关辅助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncExcelHelper.DataTableToExcel2(System.Data.DataTable,System.String,System.String)">
            <summary>
            DataTable导出为Excel添加标题
            </summary>
            <param name="dt">数据</param>
            <param name="excelTile">标题</param>
            <param name="SheetName">SheetName</param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncExcelHelper.DataTableToExcel2``1(System.Collections.Generic.IList{``0},System.String,System.String)">
            <summary>
            IList《T》导出为Excel添加标题
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="excelTile"></param>
            <param name="SheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncExcelHelper.DataTableToExcel2(DevExpress.XtraGrid.Views.Grid.GridView,System.String,System.String)">
            <summary>
            GridView导出为Excel添加标题
            </summary>
            <param name="grid"></param>
            <param name="excelTile"></param>
            <param name="SheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncExcelHelper.DataTableToMergeExcel2(System.Data.DataTable,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            DataTable保存为Excel合并列并求和添加标题
            </summary>
            <param name="dt">数据源</param>
            <param name="MergeBy">合并列集合</param>
            <param name="SumMerge">合并求和列集合</param>
            <param name="excelTile"></param>
            <param name="SheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncExcelHelper.ChooseFilePath2(System.String)">
            <summary>
            选择文件路径
            </summary>
            <param name="fileName">文件名</param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncExcelHelper.SaveToFile2(System.Data.DataTable,System.String,System.String)">
            <summary>
            由DataTable对象保存为Excel文件
            </summary>
            <param name="dt">文件流</param>
            <param name="fileName">文件名</param>
            <param name="excelTile">/excel标题名称</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncExcelHelper.SaveToFile2``1(System.Collections.Generic.IList{``0},System.String,System.String)">
            <summary>
            由IList《T》对象保存为Excel文件
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="list">数据源集合</param>
            <param name="fileName">文件名</param>
            <param name="excelTile">/excel标题名称</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncExcelHelper.SaveToFile2(DevExpress.XtraGrid.Views.Grid.GridView,System.String,System.String)">
            <summary>
            由IList《T》对象保存为Excel文件
            </summary>
            <param name="grid">GridView</param>
            <param name="fileName">文件名</param>
            <param name="excelTile">/excel标题名称</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncBuilderGridLocalizer">
            <summary>
            继承GridLocalizer，重写GetLocalizedString
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncBuilderGridLocalizer.#ctor(System.Collections.Generic.Dictionary{DevExpress.XtraGrid.Localization.GridStringId,System.String})">
            <summary>
            带参数的构造函数
            </summary>
            <param name="cusLocalizedKeyValue">需要转移的GridStringId，其对应的文字描述</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncBuilderGridLocalizer.GetLocalizedString(DevExpress.XtraGrid.Localization.GridStringId)">
            <summary>
            重载
            </summary>
            <param name="id">GridStringId</param>
            <returns>string</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.GridViewFind2">
            <summary>
            自定义GridControl按钮文字
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.GridViewFind2.SetGridLocalizer2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.GridViewFind2.CustomButtonText2(DevExpress.XtraGrid.Views.Grid.GridView,System.Collections.Generic.Dictionary{DevExpress.XtraGrid.Localization.GridStringId,System.String})">
            <summary>
            自定义GridControl按钮文字
            </summary>
            <param name="girdview">GridView</param>
            <param name="cusLocalizedKeyValue">需要转移的GridStringId，其对应的文字描述</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncAddLog">
            <summary>
            记录客户端日志
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncAddLog.FmUseTimeLog(System.Object)">
            <summary>
            窗体加载耗时（异步记录）
            </summary>
            <param name="obj">耗时</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncAddLog.MenuClickLog(System.Object)">
            <summary>
            菜单点击时（异步记录）
            </summary>
            <param name="obj">耗时</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncAddLog.BtnClickLog(System.Object)">
            <summary>
            按钮点击时（异步记录）
            </summary>
            <param name="obj">耗时</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncAddLog.BusiLog(System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            业务日志记录
            </summary>
            <param name="busName">业务名称，例如：收费、开药保存、退费保存</param>
            <param name="busBeginTime">开始时间</param>
            <param name="busEndTime">截止时间</param>
            <param name="otherContext">其他内容</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncAddLog.BusiLog2(System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            业务日志记录（不依赖登录）
            </summary>
            <param name="busName">业务名称，例如：收费、开药保存、退费保存</param>
            <param name="busBeginTime">开始时间</param>
            <param name="busEndTime">截止时间</param>
            <param name="otherContext">其他内容</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncBrowserHelper">
            <summary>
            浏览器操作帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncBrowserHelper.OpenBrowserUrl2(System.String,Lenovo.HIS.cUtils.BrowserType2)">
            <summary>
            打开浏览器
            </summary>
            <param name="url">uri地址</param>
            <param name="browser">浏览器类型</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncBrowserHelper.OpenChrome2(System.String)">
            <summary>
            调用谷歌浏览器
            </summary>
            <param name="url">打开网页的链接</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncBrowserHelper.OpenInternetExplorer2(System.String)">
            <summary>
            用IE打开浏览器
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncBrowserHelper.OpenDefaultBrowserUrl2(System.String)">
            <summary>
            打开系统默认浏览器（用户自己设置了默认浏览器）
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncBrowserHelper.OpenFireFox2(System.String)">
            <summary>
            火狐浏览器打开网页
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncBrowserHelper.GetExecutePath2(System.String)">
            <summary>
            注册表中获取可执行文件路径
            </summary>
            <param name="executeName">可执行文件名称</param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncBrowserHelper.GetChromePath2">
            <summary>
            获取Chorme浏览器路径
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.BrowserType2">
            <summary>
            浏览器类型
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.BrowserType2.Default">
            <summary>
            客户默认浏览器
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.BrowserType2.Chrome">
            <summary>
            谷歌浏览器
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.BrowserType2.InternetExplorer">
            <summary>
            IE浏览器
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.BrowserType2.FireFox">
            <summary>
            火狐浏览器
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncCache">
            <summary>
            缓存数据
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCache.AddAppCache(Lenovo.HIS.Entities.EntityAppCache)">
            <summary>
            需要预加载的应用，存储到本地下次启动时自动加载
            </summary>
            <param name="appInfo">The application information.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncComponentHelper">
            <summary>
            控件帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncComponentHelper.BeforeClick2(System.Windows.Forms.Control,System.Func{System.Boolean})">
            <summary>
            点击之前处理事件
            如果控件本身没有click事件则不会执行 委托方法
            </summary>
            <param name="control">控件</param>
            <param name="callBackFunc">委托，控件点击前处方的方法</param>
            <returns>返回true会继续执行控件的click，返回false不再执行控件的click</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncConfig">
            <summary>
            公共设置类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.GetConfigText(Lenovo.HIS.Entities.EnumConfigType,System.Boolean,System.String,System.String,System.String,System.String,Lenovo.HIS.Entities.EnumConfigValueType,System.String,System.Boolean)">
            <summary>
            获取配置值
            </summary>
            <param name="configType">配置类型</param>
            <param name="spanApp">是否跨应用，跨应用：多个应用公用一个配置，不跨应用：每个应用对应一个配置</param>
            <param name="groupName">分类名称</param>
            <param name="name">配置名称</param>
            <param name="defaultValue">当没有配置时默认值</param>
            <param name="remark">备注</param>
            <param name="valueType">值类别</param>
            <param name="Items">值可选项，用'|'分隔，值类别 StrDrop 时需要,</param>
            <param name="realTime">是否实时，true每次从数据库取 false 从缓存取 默认false</param>
            <returns>config值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.GetConfigText(System.String,Lenovo.HIS.Entities.EnumConfigType,System.Boolean,System.String,System.String,System.String,System.String,Lenovo.HIS.Entities.EnumConfigValueType,System.String,System.Boolean)">
            <summary>
            获取配置值
            </summary>
            <param name="formFullName">窗体全名：命名空间+类名</param>
            <param name="configType">配置类型</param>
            <param name="spanApp">是否跨应用，跨应用：多个应用公用一个配置，不跨应用：每个应用对应一个配置</param>
            <param name="groupName">分类名称</param>
            <param name="name">配置名称</param>
            <param name="defaultValue">当没有配置时默认值</param>
            <param name="remark">备注</param>
            <param name="valueType">值类别</param>
            <param name="Items">值可选项，用'|'分隔，值类别 StrDrop 时需要,</param>
            <param name="realTime">是否实时，true每次从数据库取 false 从缓存取 默认false</param>
            <returns>config值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.GetConfigText_Load(Lenovo.HIS.Entities.EnumConfigType,System.Boolean,System.String,System.String,System.String,System.String,Lenovo.HIS.Entities.EnumConfigValueType,System.String,System.Boolean)">
            <summary>
            获取配置值（在load方法使用，不要再构造函数使用）
            </summary>
            <param name="configType">配置类型</param>
            <param name="spanApp">是否跨应用，跨应用：多个应用公用一个配置，不跨应用：每个应用对应一个配置</param>
            <param name="groupName">分类名称</param>
            <param name="name">配置名称</param>
            <param name="defaultValue">当没有配置时默认值</param>
            <param name="remark">备注</param>
            <param name="valueType">值类别</param>
            <param name="Items">值可选项，用'|'分隔，值类别 StrDrop 时需要,</param>
            <param name="realTime">是否实时，true每次从数据库取 false 从缓存取 默认false</param>
            <returns>config值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.GetConfigBoolean(Lenovo.HIS.Entities.EnumConfigType,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            获取布尔配置值
            </summary>
            <param name="configType">配置类型</param>
            <param name="spanApp">是否跨应用，跨应用：多个应用公用一个配置，不跨应用：每个应用对应一个配置</param>
            <param name="groupName">分类名称</param>
            <param name="name">配置名称</param>
            <param name="defaultValue">当没有配置时默认值</param>
            <param name="remark">备注</param>
            <param name="realTime">是否实时，true每次从数据库取 false 从缓存取 默认false</param>
            <returns>config值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.GetConfigBoolean(System.String,Lenovo.HIS.Entities.EnumConfigType,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            获取布尔配置值
            </summary>
            <param name="formFullName">窗体全名：命名空间+类名</param>
            <param name="configType">配置类型</param>
            <param name="spanApp">是否跨应用，跨应用：多个应用公用一个配置，不跨应用：每个应用对应一个配置</param>
            <param name="groupName">分类名称</param>
            <param name="name">配置名称</param>
            <param name="defaultValue">当没有配置时默认值</param>
            <param name="remark">备注</param>
            <param name="realTime">是否实时，true每次从数据库取 false 从缓存取 默认false</param>
            <returns>config值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.GetConfigBoolean_Load(Lenovo.HIS.Entities.EnumConfigType,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            获取布尔配置值（在load方法使用，不要再构造函数使用）
            </summary>
            <param name="configType">配置类型</param>
            <param name="spanApp">是否跨应用，跨应用：多个应用公用一个配置，不跨应用：每个应用对应一个配置</param>
            <param name="groupName">分类名称</param>
            <param name="name">配置名称</param>
            <param name="defaultValue">当没有配置时默认值</param>
            <param name="remark">备注</param>
            <param name="realTime">是否实时，true每次从数据库取 false 从缓存取 默认false</param>
            <returns>config值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.SetConfigValue(Lenovo.HIS.Entities.EnumConfigType,System.Boolean,System.String,System.String,System.String,System.String,Lenovo.HIS.Entities.EnumConfigValueType,System.String)">
            <summary>
            修改或新增配置 目前支持单机和个人
            </summary>
            <param name="configType">类型</param>
            <param name="spanApp">是否跨应用</param>
            <param name="groupName">分类名称</param>
            <param name="name">配置名称</param>
            <param name="newValue">修改后的值</param>
            <param name="remark">配置备注 为空时取配置名称</param>
            <param name="valueType">值类型</param>
            <param name="Items">值可选项，用'|'分隔，值类别 StrDrop 时需要</param>
            <returns>config值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.SetConfigValue(Lenovo.HIS.Entities.EnumConfigType,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            修改配置 目前支持单机和个人
            </summary>
            <param name="configType">配置类型</param>
            <param name="spanApp">是否跨应用，跨应用：多个应用公用一个配置，不跨应用：每个应用对应一个配置</param>
            <param name="groupName">分类名称</param>
            <param name="name">配置名称</param>
            <param name="newValue">需要更改的值</param>
            <param name="remark">配置说明</param>
            <returns>config值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.ChangeDeptCode(System.Int32)">
            <summary> 
            快速切换科室代码 修改通用科室病区、药房 0科室 1 病区 2 药库 3 药房 4 药房药库
            </summary>
            <param name="type">0科室 1 病区 2 药库 3药房</param>
            <returns>true pubvar中对应值同步更改</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncConfig.ChangePharmacy(System.String)">
            <summary>
            设置当前药房
            </summary>
            <param name="PharmacyCode">药房代码</param>
            <returns>config值</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncDragHelper">
            <summary>
            拖拽帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncDragHelper.DragGridRow2``1(DevExpress.XtraGrid.Views.Grid.GridView,System.Action{DevExpress.XtraGrid.Views.Grid.GridView,``0,``0,System.Boolean})">
            <summary>
            GridView 拖拽
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="gvMain">拖拽的对象</param>
            <param name="returnFunction">回掉函数</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncDragHelper.DragTreeList2(DevExpress.XtraTreeList.TreeList,System.Action{DevExpress.XtraTreeList.Nodes.TreeListNode})">
            <summary>
            TreeList 拖拽
            </summary>
            <param name="treeList"></param>
            <param name="returnFunction">回调函数</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncEnvironment">
            <summary>
            环境变量
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncEnvironment.AddEnvironmentPaths(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            添加环境变量
            </summary>
            <param name="paths">路径列表</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncGridControlEx">
            <summary>
            GridControlEx扩展帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGridControlEx.SetGridGroup2(DevExpress.XtraGrid.GridControl,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            分组合计
            </summary>
            <param name="gridControl"></param>
            <param name="fieldName"></param>
            <param name="displayFormat"></param>
            <param name="isCount"></param>
            <param name="deleteGroup"></param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncHealthCode">
            <summary>
            注册
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.GetToken(Lenovo.HIS.Entities.EntityRequestToken)">
            <summary>
            获取令牌
            </summary>
            <param name="rt">请求令牌实体</param>
            <returns>Json格式内容（框架实体EntityRequestTokenRtn）</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.RefreshToken">
            <summary>
            刷新令牌
            </summary>
            <returns>Json格式内容（框架实体EntityRequestTokenRtn）</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.RegisterHealthCode(Lenovo.HIS.Entities.EntityRegQuery)">
            <summary>
            注册
            </summary>
            <param name="rq">注册实体</param>
            <returns>Json格式内容（框架实体EntityRegQuery）</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.GetHealthCode(Lenovo.HIS.Entities.EntityApply)">
            <summary>
            获取二维码图片
            </summary>
            <param name="ea">获取二维码图片实体</param>
            <returns>Json格式内容（框架实体EntityApply）</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.VerifyHealthCode(Lenovo.HIS.Entities.EntityVerify)">
            <summary>
            验证二维码
            </summary>
            <param name="ev">验证二维码图片实体</param>
            <returns>Json格式内容（框架实体EntityVerify）</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.ModifyHealthCode(Lenovo.HIS.Entities.EntityModifyContent)">
            <summary>
            修改
            </summary>
            <param name="ec">修改实体</param>
            <returns>Json格式内容（框架实体EntityRegQuery）</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.CheckTokenParas(Lenovo.HIS.Entities.EntityRequestToken)">
            <summary>
            获取token 方法参数检查
            </summary>
            <param name="rt">令牌请求实体</param>
            <returns>成功true 不通过false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.CheckRefreshParas(Lenovo.HIS.Entities.EntityRequestToken)">
            <summary>
            刷新token方法参数检查
            </summary>
            <param name="rt">令牌请求实体</param>
            <returns>通过true 不通过false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.CheckRegParas(Lenovo.HIS.Entities.EntityRegQuery)">
            <summary>
            注册方法参数检查
            </summary>
            <param name="rq">二维码图标实体</param>
            <returns>通过true 不通过false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.CheckApplyParas(Lenovo.HIS.Entities.EntityApply)">
            <summary>
            获取电子健康码参数检查
            </summary>
            <param name="ea">申请信息</param>
            <returns>通过true 不通过false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.CheckModifyParas(Lenovo.HIS.Entities.EntityModify)">
            <summary>
            修改电子健康码信息参数检查
            </summary>
            <param name="e">修改信息</param>
            <returns>通过true 不通过false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHealthCode.CheckVerifyParas(Lenovo.HIS.Entities.EntityVerify)">
            <summary>
            修改电子健康码信息参数检查
            </summary>
            <param name="e">验证信息</param>
            <returns>通过true 不通过false</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncImpExp">
            <summary>
            Excel导入导出方法
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ExportTableToExcel(System.String)">
            <summary>
            根据表名从数据库导出到Excel
            </summary>
            <param name="tableName">表名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ExportDataSetToExcel(System.Data.DataSet,System.String)">
            <summary>
            由DataSet导出Excel
            </summary>
            <param name="ds">数据源</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ExportDataTableToExcel(System.Data.DataTable,System.String,System.String)">
            <summary>
            由DataTable导出Excel
            </summary>
            <param name="dt">数据源</param>
            <param name="sheetName">工作表名称</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ExportGridControlToExcel(DevExpress.XtraGrid.GridControl,System.String)">
            <summary>
            由GridControl导出Excel
            </summary>
            <param name="grid">GridControl</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ExportDataGridViewToExcel(System.Windows.Forms.DataGridView,System.String,System.String)">
            <summary>
            由DataGridView导出
            </summary>
            <param name="grid">DataGridView</param>
            <param name="sheetName">工作表名称</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ImportExcelToOracle">
            <summary>
            Excel导入到数据库(Oracle)
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.GetCellValue(NPOI.SS.UserModel.ICell)">
            <summary>
            对Excel的各个单元格的格式进行判断并转换
            </summary>
            <param name="cell">ICell</param>
            <returns>单元格值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ConvertColumnIndexToColumnName(System.Int32)">
            <summary>
            将Excel的列索引转换为列名，列索引从0开始，列名从A开始。如第0列为A，第1列为B...
            </summary>
            <param name="index">列索引</param>
            <returns>列名，如第0列为A，第1列为B...</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ImportFromExcel(System.IO.Stream,System.String,System.Int32,System.Boolean)">
            <summary>
            由Excel导入DataTable
            </summary>
            <param name="excelFileStream">Excel文件流</param>
            <param name="sheetName">Excel工作表名称</param>
            <param name="headerRowIndex">Excel表头行索引</param>
            <param name="isCompatible">是否为兼容模式</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ImportFromExcel(System.String,System.String,System.Int32)">
            <summary>
            由Excel导入DataTable
            </summary>
            <param name="excelFilePath">Excel文件路径，为物理路径。</param>
            <param name="sheetName">Excel工作表名称</param>
            <param name="headerRowIndex">Excel表头行索引</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ImportFromExcel(System.IO.Stream,System.Int32,System.Boolean)">
            <summary>
            由Excel导入DataSet，如果有多个工作表，则导入多个DataTable
            </summary>
            <param name="excelFileStream">Excel文件流</param>
            <param name="headerRowIndex">Excel表头行索引</param>
            <param name="isCompatible">是否为兼容模式</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.ImportFromExcel(System.String,System.Int32)">
            <summary>
            由Excel导入DataSet，如果有多个工作表，则导入多个DataTable
            </summary>
            <param name="excelFilePath">Excel文件路径，为物理路径。</param>
            <param name="headerRowIndex">Excel表头行索引</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.CheckIsData(System.Data.DataSet)">
            <summary>
            导入数据校验
            </summary>
            <param name="ds">数据源</param>
            <returns>接口返回</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.GetSaveFilePath">
            <summary>
            获取要保存的文件名称（含完整路径）
            </summary>
            <returns>路径</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.GetIsCompatible(System.String)">
            <summary>
            判断是否为兼容模式
            </summary>
            <param name="filePath"></param>
            <returns>true  false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.CreateWorkbook(System.Boolean)">
            <summary>
            创建工作薄
            </summary>
            <param name="isCompatible"></param>
            <returns>IWorkbook</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.CreateWorkbook(System.Boolean,System.Object)">
            <summary>
            创建工作薄(依据文件流)
            </summary>
            <param name="isCompatible"></param>
            <param name="stream"></param>
            <returns>IWorkbook</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.GetCellStyle(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            创建表格头单元格
            </summary>
            <param name="workbook">工作簿</param>
            <returns>ICellStyle</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncImpExp.GetDataTableFromSheet(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            从工作表中生成DataTable
            </summary>
            <param name="sheet">ISheet</param>
            <param name="headerRowIndex">行索引</param>
            <returns>数据集</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncPrice">
            <summary>
            小数舍入规则
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPrice.GetConvertPrice(System.Decimal,System.String)">
            <summary>
            小数舍入规则，小数后第几位,大于(但不等于)几时进位,保留几位；322表示小数后3位大于不等于2保留两位
            例如   值：1.12345  转化类型：322   结果是1.13
                   值：1.12345  转化类型：342   结果是1.12
            </summary>
            <param name="value">数字</param>
            <param name="tranfType">转化方式</param>
            <returns>转化后的值</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncEncryDecryption">
            <summary>
            加解密相关方法
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncEncryDecryption.MD5Encrypt32(System.String)">
            <summary>
            32位MD5加密
            </summary>
            <param name="strText">内容</param>
            <returns>密文</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncEncryDecryption.AesEncrypt(System.String,System.String)">
            <summary>
             AES 加密
            </summary>
            <param name="str">明文（待加密）</param>
            <param name="key">密文</param>
            <returns>密文</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncEncryDecryption.AesDecrypt(System.String,System.String)">
            <summary>
             AES 解密
            </summary>
            <param name="str">明文（待解密）</param>
            <param name="key">密文</param>
            <returns>解密后内容</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncEncryDecryption.EncodeBase64(System.String,System.String)">
            <summary>
            编码
            </summary>
            <param name="code_type">编码类型</param>
            <param name="code">内容</param>
            <returns>密文</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncEncryDecryption.DecodeBase64(System.String,System.String)">
            <summary>
            解码
            </summary>
            <param name="code_type">解码类型</param>
            <param name="code">内容</param>
            <returns>解码后内容</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncEncryDecryption.QueryStringEncodeCode(System.String)">
            <summary>
            QueryString加密
            </summary>
            <param name="code">内容</param>
            <returns>密文</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncEncryDecryption.QueryStringDncodeCode(System.String)">
            <summary>
            QueryString解密
            </summary>
            <param name="code">密文</param>
            <returns>内容</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.GeneralDigest">
            <summary>
            GeneralDigest
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.GeneralDigest.Update(System.Byte)">
            <summary>
            
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.GeneralDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="inOff"></param>
            <param name="length"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.GeneralDigest.Finish">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.GeneralDigest.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.GeneralDigest.GetByteLength">
            <summary>
            
            </summary>
            <returns>int</returns>
        </member>
        <member name="P:Lenovo.HIS.cUtils.GeneralDigest.AlgorithmName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.GeneralDigest.GetDigestSize">
            <summary>
            
            </summary>
            <returns>int</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.GeneralDigest.DoFinal(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="output"></param>
            <param name="outOff"></param>
            <returns>int</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.SupportClass">
            <summary>
            SupportClass
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SupportClass.URShift(System.Int32,System.Int32)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SupportClass.URShift(System.Int32,System.Int64)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SupportClass.URShift(System.Int64,System.Int32)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SupportClass.URShift(System.Int64,System.Int64)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.SM3Digest">
            <summary>
            SM3Digest
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.SM3Digest.AlgorithmName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SM3Digest.GetDigestSize">
            <summary>
            
            </summary>
            <returns>int</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SM3Digest.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SM3Digest.#ctor(Lenovo.HIS.cUtils.SM3Digest)">
            <summary>
            
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SM3Digest.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SM3Digest.IntToBigEndian(System.Int32,System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="n"></param>
            <param name="bs"></param>
            <param name="off"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.SM3Digest.DoFinal(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="out_Renamed"></param>
            <param name="outOff"></param>
            <returns>int</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncSmsBack">
            <summary>
            短信发送（蝶信）
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSmsBack.SmsSend(System.String)">
            <summary>
            短信发送
            </summary>
            <param name="sendJson">发送内容Json格式（框架实体EntitySmsSendView）</param>
            <returns>Json格式内容（框架实体EntitySmsSendRtn）</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSmsBack.PostSend(Lenovo.HIS.Entities.EntitySmsSend,System.String)">
            <summary>
            发送接口
            </summary>
            <param name="send">发送内容</param>
            <param name="_userCode">用户代码</param>
            <returns>返回实体</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSmsBack.Checked(Lenovo.HIS.Entities.EntitySmsSend)">
            <summary>
            检查输入数据
            </summary>
            <param name="_send">发送内容</param>
            <returns>通过true 不通过false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSmsBack.buildSendEntity(Lenovo.HIS.Entities.EntitySmsSend,System.String)">
            <summary>
            组织发送内容
            </summary>
            <param name="_send">发送内容</param>
            <param name="_userCode">用户代码</param>
            <returns>发送内容</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncSms">
            <summary>
            短信发送（蝶信）
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSms.SmsSend(System.String)">
            <summary>
            短信发送
            </summary>
            <param name="sendJson">发送内容Json格式（框架实体EntitySmsSendView）</param>
            <returns>Json格式内容（框架实体EntitySmsSendRtn）</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSms.PostSend(Lenovo.HIS.Entities.EntitySmsSend,System.String)">
            <summary>
            发送接口
            </summary>
            <param name="send">发送内容</param>
            <param name="_userCode">用户代码</param>
            <returns>结果实体</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSms.Checked(Lenovo.HIS.Entities.EntitySmsSend)">
            <summary>
            检查输入数据
            </summary>
            <param name="_send">发送内容</param>
            <returns>true通过  false不通过</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSms.buildSendEntity(Lenovo.HIS.Entities.EntitySmsSend,System.String)">
            <summary>
            组织发送内容
            </summary>
            <param name="_send">发送内容</param>
            <param name="_userCode">用户代码</param>
            <returns>内容实体</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSms.InvokeWebApi(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            webapi调用  默认post方式调用
            </summary>
            <param name="url">例如 http://localhost:1901</param>
            <param name="dicPars">参数</param>
            <param name="methodType">请求方式</param>
            <returns>调用返回结果</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncReport">
            <summary>
            报表帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReport.SetCurColmData(System.Data.DataTable)">
            <summary>
            设置数据源的当前登录信息
            </summary>
            <param name="dt">数据源DataTable</param>
            <returns>列长度</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReport.SetParsColmData(System.Data.DataTable,System.Collections.Generic.List{Lenovo.HIS.Entities.EntityParm})">
            <summary>
            设置数据源的参数数据
            </summary>
            <param name="dt">数据源DataTable</param>
            <param name="parms">参数</param>
            <returns>参数数量</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReport.getSysBySql(System.String)">
            <summary>
            拼接系统参数
            </summary>
            <param name="sql">sql语句</param>
            <returns>sql语句</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReport.CheckStringChinese(System.String)">
            <summary>
            用 ASCII 码范围判断字符是不是汉字
            </summary>
            <param name="text">待判断字符或字符串</param>
            <returns>真：是汉字；假：不是</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReport.GetUsedChar">
            <summary>
            可用字符
            </summary>
            <returns>字符列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReport.GetCurInfo">
            <summary>
            系统参数
            </summary>
            <returns>参数集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncReport.GetSysPars(System.String)">
            <summary>
            根据给定的SQL生成他的系统参数
            </summary>
            <param name="strSql">sql语句</param>
            <returns>参数实体列表</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncAge">
            <summary>
            计算年龄方法
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncAge.GetAgeStringAsBirthday(System.Nullable{System.DateTime})">
            <summary>
            通过出生日期获取年龄
            </summary>
            <param name="birthday">
            例如配置的  6岁6个月10天12小时
            ①7岁3个月20天，显示7岁，不显示月、天、时、分
            ②4岁3个月20天，显示4岁3个月，不显示天、时、分
            ③0岁7个月20天，显示7个月，不显示天、时、分
            ④0岁1个月20天，显示1个月20天，不显示时、分
            ⑤0岁0个月20天15小时，显示20天不显示时、分
            ⑥0岁0个月3天15小时，显示3天15小时，不显示分
            ⑦0岁0个月0天15小时35分钟，显示15小时，不显示分钟
            ⑧0岁0个月0天10小时35分钟，显示10小时35分钟
            </param>
            <returns>年龄字符串</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncAge.GetAgeStringAsBirthday_old(System.Nullable{System.DateTime})">
            <summary>
            通过出生日期获取年龄
            </summary>
            <param name="birthday">日期</param>
            <returns>年龄字符串</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncCA">
            <summary>
            CA认证方法
            注:本辅助类为调用第三方CA插件辅助，为保护业务正常流转，当发生异常时为保证正常业务不中断将直接捕获并将返回正确值
            <group>CA帮助类</group>
            <obsolete></obsolete>
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.CheckDevice">
            <summary>
            检查设备是否存在
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.GetUserList">
            <summary>
            获取所有用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.GetExportUserCert(System.String)">
            <summary>
            读取当前插入KEY的证书用户唯一标识（用户绑定时调用）：
            </summary>
            <param name="certID">The cert identifier.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.GetUserCertPicture">
            <summary>
            读取当前插入KEY的电子签章（登录时绑定电子签章）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.GetCertPictureInfoByUserId(System.Int32)">
            <summary>
             获取用户签章
              <group></group>
               <obsolete></obsolete>
            </summary>
            <param name="userId">用户Id</param>
            <returns>返回用户签名信息<see cref="T:Lenovo.HIS.Entities.EntityUserCertPicture" >用户签名信息</see></returns>
            <example>
            //示例代码如下：
               <code>
               EntityUserCertPicture certPicture=GetCertPictureInfoByUserId(用户Id);
               </code>
            </example>
            <exception cref="T:Lenovo.HIS.Common.AnxhitHISException">该方法当用户找不到时会抛出该异常:code:10002, msg:找不到用户信息!</exception>
            <exception cref="T:System.Exception">该方法内部未捕获任何异常，当异常发生时由框架自动捕获</exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.GetCertPictureByUserId(System.Int32)">
            <summary>
            获取用户签章图片对象，当数据不存在时返回Null，该方法会自动缓存图片，第一次调用会去数据库进行获取，后续将对象缓存下来。
              <group></group>
               <obsolete></obsolete>
            </summary>
            <param name="userId">用户Id</param>
            <returns>Bitmap图片对象</returns>
            <example>
            获取用户图片
               <code>
               Bitmap  btm=GetCertPictureByUserId(用户Id);
               </code>
            </example>
            <exception cref="T:System.Exception">
            该方法内部未捕获任何异常，当异常发生时由框架自动捕获
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.GetCertPictureByUserId(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取用户签章图片对象，当数据不存在时返回Null，该方法会自动缓存图片，第一次调用会去数据库进行获取，后续将对象缓存下来。
              <group></group>
               <obsolete></obsolete>
            </summary>
            <param name="userId">用户Id</param>
            <param name="width">宽度</param>
            <param name="weight">高度</param>
            <returns>Bitmap图片对象</returns>
            <example>
            获取用户图片
               <code>
               Bitmap  btm=GetCertPictureByUserId(用户Id);
               </code>
            </example>
            <exception cref="T:System.Exception">
            该方法内部未捕获任何异常，当异常发生时由框架自动捕获
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.CheckLogin(System.String,System.String)">
            <summary>
            客户端证书登录
            </summary>
            <param name="certID">证书ID</param>
            <param name="userPwd">用户密码</param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.ValidateCertificate(System.String,System.String,System.String)">
            <summary>
            服务端验证客户端证书有效性
            </summary>
            <param name="strUserCert">用户证书</param>
            <param name="certID">证书ID</param>
            <param name="userNumber">用户工号</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.GetCertInfoByOid(System.String,System.String)">
            <summary>
            业务系统获取证书唯一标识，并与数据库比对，比对成功时登录成功
            </summary>
            <param name="strClientCert">签名证书</param>
            <param name="strCertOIDSM2">SM2证书</param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.GetSignData(System.String,System.String,System.String)">
            <summary>
            客户端签名，利用私钥对签名原文签名，签名时必须插上key而且必须已经登录
            </summary>
            <param name="strCertId">证书标识</param>
             <param name="strCert">用户证书</param>
            <param name="strOrgData">签名原文</param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.GetSignData(System.Int32,System.String)">
            <summary>
            客户端签名，利用私钥对签名原文签名，签名时必须插上key而且必须已经登录
            </summary>
            <param name="userId">用户ID</param>
            <param name="strOrgData">签名原文</param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.CreateTS(System.String)">
            <summary>
            加盖时间戳
            </summary>
            <param name="strOrgData">签名原文</param>
            <returns>业务系统将“签名证书”(strClientCert)、“签名值”(strSignValue)、“时间戳值”(timestampvalue)存入相应的业务数据表。</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.VerifySignedData(System.String,System.String,System.String)">
            <summary>
             验证数字签名,业务系统从数据库中获取签名证书、签名原文、签名值，调用验证接口进行验证。
            </summary>
            <param name="strUserCert">用户证书</param>
            <param name="strOrgData">签名原文</param>
            <param name="strSignValue"></param>
            <returns>根据签名证书验证签名 0 表示验证成功</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.VerifyTS(System.String,System.String)">
             <summary>
             验证时间戳
             </summary>
             <param name="strTimeStamp">时间戳</param>
             <param name="strOrgdata">签名原文</param>
             <returns> VerifyTS,参数1：时间戳值；参数2：原文，若原文为空，则不验证原文；成功返回0,失败返回如下值：
            -1 为时间戳验证不通过
            -2 为原文验证不通过
            -3 为不是所信任的根
            -4 证书未生效
            -5 查询不到此证书
            -6 为签发时间戳时服务器证书过期
            </returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCA.IsEnable">
            <summary>
            CA功能是否启用
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncCharges">
            <summary>
            收费清单功能类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.GetLocalCharges(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="tableName">表名</param>
            <param name="sign">0收费 1 门诊药房/住院药房</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.ChargeListRefresh(System.String,System.String,Lenovo.HIS.Entities.EnumIpOpSign)">
            <summary>
            获取收费项目列表（直接读取数据库）
            </summary>
            <param name="DrugdeptCodes">药品部门科室集合</param>
            <param name="PresentDeptCode">科室代码</param>
            <param name="sign">住院门诊标记</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.ChargeListExpenseRefresh(System.String)">
            <summary>
            带记账比例
            </summary>
            <param name="AccountCode">结算类型</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.DrugBaseRefresh(System.String[],System.DateTime)">
            <summary>
            药典差异 0 药典 1门诊 2住院
            </summary>
            <param name="PharmacyCodes">药房代码</param>
            <param name="lastUpdateTime">最后更新时间</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.DrugAliasRefresh(System.String[],System.DateTime)">
            <summary>
            别名差异 1 门诊 2 住院
            </summary>
            <param name="PharmacyCodes">The pharmacy codes.</param>
            <param name="time">The time.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.PharmacyRefresh(System.String,System.DateTime)">
            <summary>
             门诊/住院药房药品信息差异
            </summary>
            <param name="pharmacyCode">The pharmacy code.</param>
            <param name="LastUpdateTime">The last update time.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.OPPharmacyRefresh(System.String,System.DateTime)">
            <summary>
            门诊药房药品信息差异
            </summary>
            <param name="pharmacyCode">The pharmacy code.</param>
            <param name="LastUpdateTime">The last update time.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.IPPharmacyRefresh(System.String,System.DateTime)">
            <summary>
            住院药房药品信息差异
            </summary>
            <param name="pharmacyCode">The pharmacy code.</param>
            <param name="LastUpdateTime">The last update time.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.ChargeItemRefresh(System.DateTime,Lenovo.HIS.Entities.EnumIpOpSign)">
            <summary>
            收费项目差异
            </summary>
            <param name="LastUpdateTime">The last update time.</param>
            <param name="sign">The sign.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.DeleteCharges(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityCharges},System.Int32)">
            <summary>
            1 收费 2 门诊 3 住院
            </summary>
            <param name="charges">收费项目列表</param>
            <param name="type">1 收费 2 门诊 3 住院</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.ChargePackageListRefresh">
            <summary>
            收费套餐差异
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.ChargePackageDetailListRefresh">
            <summary>
            收费套餐明细差异
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.GetChargePackages">
            <summary>
            获取收费项目套餐
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.ChargePackageRefresh(System.DateTime)">
            <summary>
            套餐差异
            </summary>
            <param name="LastUpdateTime">The last update time.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.DeleteChargePackages(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityChargePackage})">
            <summary>
            删除sqllite中失效套餐
            </summary>
            <param name="chargePackages">The charge packages.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.GetChargePackageDetails">
            <summary>
            获取收费项目套餐明细
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.ChargePackageDetailRefresh(System.DateTime)">
            <summary>
            套餐明细差异
            </summary>
            <param name="LastUpdateTime">The last update time.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.DeleteChargePackageDetails(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityChargePackageDetail})">
            <summary>
            删除sqllite中失效套餐明细
            </summary>
            <param name="chargePackageDetails">The charge package details.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.GetAllUsedCharges(Lenovo.HIS.Entities.EnumIpOpSign)">
            <summary>
            Gets all used charges.
            </summary>
            <param name="sign">The sign.</param>
            <returns></returns>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncCharges.ChargeExternRefresh">
            <summary>
            根据院区获取收费项目扩展属性（直接读取数据库）
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncClient">
            <summary>
            客户端ip,macaddress
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncClient.GetIP">
            <summary>
            获取客户端IP，Ipv4
            </summary>
            <returns>IP</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncClient.GetMac">
            <summary>
            获取MAC地址
            </summary>
            <returns>Mac地址</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncClientConfig">
            <summary>
            客户端配置文件app.Config操作类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncClientConfig.SetConfigValue(System.String,System.String)">
            <summary>
            修改客户端配置文件appsettings节点内容
            </summary>
            <param name="keyName">key名称</param>
            <param name="_value">值</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncClientConfig.GetConfigValue(System.String)">
            <summary>
            获取AppSettings中某一节点值
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncDateTime">
            <summary>
            时间处理类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncDateTime.GetDbDateTime">
            <summary>
            获取数据库时间
            </summary>
            <returns>数据库时间</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncGrid">
            <summary>
            Grid操作相关帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGrid.SearchData(System.String,DevExpress.XtraGrid.Views.Grid.GridView,System.Collections.Generic.List{System.String},Lenovo.HIS.cUtils.EnumFilterType)">
            <summary>
            多字段条件同时筛选grid数据 联动search用
            </summary>
            <param name="_SearchTxt">输入值</param>
            <param name="_Gdv">表格</param>
            <param name="_ListField">字段</param>
            <param name="filterType">检索方式 默认双模糊</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGrid.SearchDataLike(DevExpress.XtraGrid.Views.Grid.GridView,System.Collections.Generic.Dictionary{System.String,System.String},Lenovo.HIS.cUtils.EnumFilterType)">
            <summary>
             固定条件 筛选grid数据
            </summary>
            <param name="_Gdv">表格</param>
            <param name="_DicSearchTxt">筛选条件,key 对应数据源字段,value 筛选条件</param>
            <param name="filterType">检索方式 默认双模糊</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGrid.ExportDataToXls2(System.String,DevExpress.XtraGrid.GridControl)">
            <summary>
            导出到Excle
            </summary>
            <param name="fileName">文件名</param>
            <param name="gridControl">DevExpress.XtraGrid.GridControl</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EnumFilterType">
            <summary>
            检索方式
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumFilterType.LeftFuzzy">
            <summary>
            左模糊
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumFilterType.RightFuzzy">
            <summary>
            右模糊
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumFilterType.BothFuzzy">
            <summary>
            双模糊
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumFilterType.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncGridHeadSet">
            <summary>
            设置表头样式
            全院配置：表格样式存储位置本地xml或本地Sqlite，默认是本地xml
            如果存储在本地xml，当修改样式时如果更新文件中存在这个xml就提示这是一个公共的样式，修改后需要同步到服务器才可以生效
            如果存储在本地Sqlite数据库，就没有公共的样式，全部为本人本地样式
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGridHeadSet.AddRange(System.Collections.Generic.List{Lenovo.HIS.cUtils.EntityGridDisplay})">
            <summary>
            设置表格样式
            </summary>
            <param name="_ListGrid">GridControl实体列表</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGridHeadSet.GetGridControl(System.Collections.Generic.List{Lenovo.HIS.cUtils.EntityGridDisplay})">
            <summary>
            grid控件设置样式
            </summary>
            <param name="_ListGrid">GridControl实体列表</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGridHeadSet._GridView_ShowGridMenu(System.Object,DevExpress.XtraGrid.Views.Grid.GridMenuEventArgs)">
            <summary>
            GridView右键菜单弹出事件
            </summary>
            <param name="sender">object sender</param>
            <param name="e">GridMenuEventArgs e</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGridHeadSet.SetSimple(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            恢复简单样式
            </summary>
            <param name="view">视图</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGridHeadSet.SetGridAdvanced(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            恢复高级样式
            </summary>
            <param name="view">视图</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGridHeadSet._item_Click_Save(System.Object,System.EventArgs)">
            <summary>
            保存样式操作
            </summary>
            <param name="sender">object sender</param>
            <param name="e">EventArgs e</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGridHeadSet._item_Click_Restore(System.Object,System.EventArgs)">
            <summary>
            还原选中表格简单样式
            </summary>
            <param name="sender">object sender</param>
            <param name="e">EventArgs e</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncGridHeadSet._item_Click_Advanced(System.Object,System.EventArgs)">
            <summary>
            高级设置
            </summary>
            <param name="sender">事件源</param>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncIMessage">
            <summary>
            即时消息帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeByModel(System.Boolean,Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String)">
            <summary>
            对操作员发送提醒消息
            </summary>
            <param name="onLine">是否只对在线的发送消息</param>
            <param name="showtype">显示方式</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="modelName">模板名称</param>
            <param name="showApps">限制提醒 要求操作员在对应的系统code状态时  默认空代表不限制</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendActionByModel(System.Boolean,Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            对操作员发送动作消息
            </summary>
            <param name="onLine">是否只对在线的发送消息</param>
            <param name="showtype">显示方式</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="modelName">模板名称</param>
            <param name="appCode">动作对应的应用code</param>
            <param name="menucode">动作对应的菜单code</param>
            <param name="actionData">动作包含的数据</param>
            <param name="showApps">限制提醒 要求操作员在对应的系统code状态时  默认空代表不限制</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendListerByModel(Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            对操作员发送由菜单进行监听的消息
            </summary> 
            <param name="showtype">显示方式</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="modelName">模板名称</param>
            <param name="appCode">动作对应的应用code</param>
            <param name="menucode">动作对应的菜单code</param>
            <param name="listenData">监听包含的数据</param>
            <param name="actionSign">是否动作类消息</param>
            <param name="actionData">动作包含的数据</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeUsers(System.Boolean,Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String)">
            <summary>
            对操作员发送提醒消息
            </summary>
            <param name="onLine">是否只对在线的发送消息</param>
            <param name="showtype">显示方式</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="userids">接收人集合 |分割</param>
            <param name="showApps">限制提醒 要求操作员在对应的系统code状态时  默认空代表不限制</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeUsersTiming(System.Boolean,Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            对操作员定时发送消息
            </summary>
            <param name="onLine">if set to <c>true</c> [on line].</param>
            <param name="showtype">The showtype.</param>
            <param name="msgLevel">The MSG level.</param>
            <param name="title">The title.</param>
            <param name="text">The text.</param>
            <param name="userids">The userids.</param>
            <param name="showApps">The show apps.</param>
            <param name="istiming">if set to <c>true</c> [istiming].</param>
            <param name="istimingCount">The istiming count.</param>
            <param name="istimingTime">The istiming time.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeUsersRetry(System.Boolean,Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            对操作员,发送失败时，重复发送消息
            </summary>
            <param name="onLine">if set to <c>true</c> [on line].</param>
            <param name="showtype">The showtype.</param>
            <param name="msgLevel">The MSG level.</param>
            <param name="title">The title.</param>
            <param name="text">The text.</param>
            <param name="userids">The userids.</param>
            <param name="retry">The retry.</param>
            <param name="showApps">The show apps.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeUsersAction(System.Boolean,Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            对操作员发送动作消息
            </summary>
            <param name="onLine">是否只对在线的发送消息</param>
            <param name="showtype">显示方式</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="userids">接收人集合 |分割</param>
            <param name="appCode">动作对应的应用code</param>
            <param name="menucode">动作对应的菜单code</param>
            <param name="actionData">动作包含的数据</param>
            <param name="showApps">限制提醒 要求操作员在对应的系统code状态时  默认空代表不限制</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeUsersLister(Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            对操作员发送由菜单进行监听的消息
            </summary>
            <param name="showtype">显示方式</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="userids">接收人集合 |分割</param>
            <param name="appCode">动作对应的应用code</param>
            <param name="menucode">动作对应的菜单code</param>
            <param name="listenData">监听包含的数据</param>
            <param name="actionSign">是否动作类消息</param>
            <param name="actionData">动作包含的数据</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeUsersWait(System.Boolean,Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String)">
            <summary>
            等待结果 对操作员发送提醒消息 
            </summary>
            <param name="onLine">是否只对在线的发送消息</param>
            <param name="showtype">显示方式</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="userids">接收人集合 |分割</param>
            <param name="showApps">限制提醒 要求操作员在对应的系统code状态时  默认空代表不限制</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeUsersPersol(System.Boolean,Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String)">
            <summary>
            个人消息发送
            </summary>
            <param name="onLine">针对在线不在线1在线 2不在线</param>
            <param name="showtype">显示条件类型：0 任何情况, 1 进入APP ；2 进入Menu    3 进入Menu并调用Menu 监听，由Menu进行确认是否展示"</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="userids">用户ID</param>
            <param name="showApps"></param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeUsersActionWait(System.Boolean,Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            等待结果 对操作员发送动作消息
            </summary>
            <param name="onLine">是否只对在线的发送消息</param>
            <param name="showtype">显示方式</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="userids">接收人集合 |分割</param>
            <param name="appCode">动作对应的应用code</param>
            <param name="menucode">动作对应的菜单code</param>
            <param name="actionData">动作包含的数据</param>
            <param name="showApps">限制提醒 要求操作员在对应的系统code状态时  默认空代表不限制</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendNoticeUsersListerWait(Lenovo.HIS.cUtils.EnumIMShowType,Lenovo.HIS.cUtils.EnumIMMsgLevel,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            等待结果 对操作员发送由菜单进行监听的消息
            </summary>
            <param name="showtype">显示方式</param>
            <param name="msgLevel">消息等级</param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="userids">接收人集合 |分割</param>
            <param name="appCode">动作对应的应用code</param>
            <param name="menucode">动作对应的菜单code</param>
            <param name="listenData">监听包含的数据</param>
            <param name="actionSign">是否动作类消息</param>
            <param name="actionData">动作包含的数据</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.InsertMsg(Lenovo.HIS.cUtils.IMtransData)">
            <summary>
            插入消息记录
            </summary>
            <param name="im"></param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendDeptMsg(System.String,System.String,System.String,System.String[],System.Int32,System.String,System.String)">
            <summary>
            对科室发送消息
            </summary>
            <param name="sysName"></param>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="deptCodes"></param>
            <param name="actionSign">行为指示标记</param>
            <param name="actionData">行为指示数据</param>
            <param name="listenData">监听数据</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendSystemMsg(System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            全院消息
            </summary>
            <param name="sysName">系统名称 "0"为系统内部消息</param>
            <param name="title">标题</param>
            <param name="text">简介</param>
            <param name="actionSign">行为指示标记</param>
            <param name="actionData">行为指示数据</param>
            <param name="listenData">监听数据</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.SendGroupMsg(System.String,System.String,System.String[],System.Int32,System.String,System.String)">
            <summary>
            对多个自定义消息组发送消息
            </summary>
            <param name="title">标题</param>
            <param name="text">内容</param>
            <param name="groupNames">消息组名列表</param>
            <param name="actionSign">行为指示标记</param>
            <param name="actionData">行为指示数据</param>
            <param name="listenData">监听数据</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncIMessage.MsgPublish(System.String)">
            <summary>
            发送消息
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EnumIMMsgLevel">
            <summary>
            IM消息类型
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumIMMsgLevel.Low">
            <summary>
            低  提示类消息 10 秒悬浮
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumIMMsgLevel.Normal">
            <summary>
            一般 提示类消息 20 秒悬浮
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumIMMsgLevel.Hight">
            <summary>
            高 需要点击关闭按钮进行关闭才能关闭
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumIMMsgLevel.Highest">
            <summary>
            最高级 业务系统慎用 医院重要通知，接收消息后直接弹出最大窗体进行突出展示通知内容 
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EnumIMShowType">
            <summary>
            IM消息右下角展示方式
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumIMShowType.All">
            <summary>
            任何情况下显示
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumIMShowType.App">
            <summary>
            进入到特定的APP
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumIMShowType.Menu">
            <summary>
            进入到特定的菜单
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumIMShowType.MenuListen">
            <summary>
            进入到特定的菜单并调用该菜单监听，由菜单自身决定是否展示
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EnumTransType">
            <summary>
            传输类型
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumTransType.OneSYS">
            <summary>
            某一个系统
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumTransType.AllSys">
            <summary>
            所有系统
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumTransType.OwmSYS">
            <summary>
            本公司的系统
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumTransType.SYSAPP">
            <summary>
            某个系统下的APP
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EnumSysTem">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.本系统">
            <summary>
            综合业务系统
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.门诊财务">
            <summary>
            门诊财务
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.药房药库">
            <summary>
            药房药库
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.住院护士站">
            <summary>
            住院护士站
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.住院医生站">
            <summary>
            住院医生站
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.门诊配发药">
            <summary>
            门诊配发药
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.住院配发药">
            <summary>
            住院配发药
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.静配中心">
            <summary>
            静配中心
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.输液管理">
            <summary>
            输液管理
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.门诊医生站">
            <summary>
            门诊医生站
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.住院财务">
            <summary>
            住院财务
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.RIS">
            <summary>
            RIS
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.LIS">
            <summary>
            LIS
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumSysTem.OA">
            <summary>
            OA
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EntityIM">
            <summary>
            消息发送实体
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.msgId">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.transportType">
            <summary>
            传输类型
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.sourseSYSCode">
            <summary>
            发送方系统代码
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.sourseAPPCode">
            <summary>
            发送方的应用代码
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.sourseUser">
            <summary>
            发送人
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.onlineSign">
            <summary>
            针对在线不在线1在线 2不在线
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.sysCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.appCode">
            <summary>
            应用代码,多个应用’|’分割
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.interval">
            <summary>
            重复发送时，时间间隔，单位 秒
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.users">
            <summary>
            1表示需要定时发  0表示不需要（定时发送状态下，发送次数才生效）
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.retray">
            <summary>
            发送失败重试次数，0表示否,其他数字表示重复发送次数，
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.istiming">
            <summary>
            1表示需要定时发  0表示不需要（定时发送状态下，发送次数才生效）
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.exectime">
            <summary>
            "2018-5-10 12:00:00",开始执行的时间
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.counts">
            <summary>
            发送次数
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.transData">
            <summary>
            传输信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityIM.remark">
            <summary>
            发送说明
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.IMtransData">
            <summary>
            消息发送实体
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.IMtransData.msgId">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.IMtransData.retStatus">
            <summary>
            0接收 1 发送
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.IMtransData.msgStatus">
            <summary>
            0未读 1 已读
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.IMtransData.authorUser">
            <summary>
            发送人
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.IMtransData.User">
            <summary>
            收件人
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.IMtransData.authorTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.IMtransData.msgType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.IMtransData.sendTime">
            <summary>
            
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.transData">
            <summary>
            发送类
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.transData.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.transData.Text">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.transData.ShowType">
            <summary>
            显示条件类型：0 不限, 1 进入APP ；2 进入Menu 调用Menu 监听，由APP进行确认是否展示",
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.transData.MenuCode">
            <summary>
            菜单代码
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.transData.MsgLevel">
            <summary>
            消息等级 0 普通通知消息(提示，10秒自动关闭，点击查看明细)1 业务消息(提示,可点击关闭及明细展示)2 重要业务消息(提示,无关闭按
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.transData.ActionSign">
            <summary>
            0 系统代发 Menu无联动动作，框架按照消息等级处理  1  系统代发 Menu有联动动作 2 个人消息 3 重要通知消息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.transData.ActionData">
            <summary>
            行为指示数据包包含 AppCode,MenuCode,fmBaseMsg函数内的参数
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.transData.ListenData">
            <summary>
            监听数据包，交由各个menu自行判定，由各自业务联动需求的两方自行协商。
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.transData.AppCode">
            <summary>
            应用代码
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncLocalCache">
            <summary>
            本地缓存
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncLocalCache.GetDataByCache(System.String,System.String,System.String)">
            <summary>
            本地缓存获取单表数据
            </summary>
            <param name="tableName">表明</param>
            <param name="TimeSignName">LastModifyTime字段名</param>
            <param name="PKName">主键名称</param>
            <returns>缓存数据集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncLocalCache.GetDataByCache(System.String,System.String,System.String,Lenovo.HIS.cUtils.DBName)">
            <summary>
            本地缓存获取单表数据
            </summary>
            <param name="tableName">表明</param>
            <param name="TimeSignName">LastModifyTime字段名</param>
            <param name="PKName">主键名称</param>
            <param name="dbname">使用的数据库连接 默认LenovoHISBase</param>
            <returns>缓存数据集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncLocalCache.DeleteLocal(System.String,System.String,Lenovo.HIS.cUtils.DBName)">
            <summary>
            删除掉本地有数据库没有的数据
            </summary>
            <param name="tableName">表名</param>
            <param name="PKName"></param>
            <param name="dbname">数据库名</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.DBName">
            <summary>
            使用的数据库别名
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.DBName.LenovoHISBase">
            <summary>
            base库
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.DBName.LenovoHIS">
            <summary>
            his库
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.DBName.LenovoCIS">
            <summary>
            cis库
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncLogin">
            <summary>
            二次登陆公共类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncLogin.Login">
            <summary>
            二次登录
            </summary>
            <returns>用户信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncLogin.LoginMany(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            多人二次登录
            </summary>
            <param name="lstUserNumber">
            登录用户列表，如果不为空显示工号，为空不显示工号由用户输入，
            例如 lstUserNumber.Add("001"),lstUserNumber.Add("")，将显示两个人登录，第一个人显示工号001，第二个人需要手动输入工号
            </param>
            <param name="title">标题，默认“请输入账号及密码登录”</param>
            <returns>所有人登录成功返回登录人列表，否则返回null</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncLogin.LoginInvalid(System.String,System.String)">
            <summary>
            登录验证
            </summary>
            <param name="userNumber">用户工号</param>
            <param name="userPsw">明文密码</param>
            <returns>验证通过true  未通过false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncLogin.LoginCA(System.String)">
            <summary>
            登录认证
            </summary>
            <param name="userNumber">用户工号</param>
            <returns>通过true 未通过false</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncMessage">
            <summary>
            系统弹窗帮助类
            <group>MessageBox系统弹窗</group>
            <obsolete></obsolete>
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.MessageBeep(System.UInt32)">
            <summary>
            提示音
            </summary>
            <param name="uType"></param>
            <returns>bool</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.showDialog(Lenovo.HIS.Entities.EnumMsgType,System.String,System.String,Lenovo.HIS.Entities.EnumMsgBtnType,Lenovo.HIS.Entities.EnumMsgFocusBtn,System.Windows.Forms.IWin32Window)">
            <summary>
            弹出窗体
            </summary>
            <param name="msgType">消息类型</param>
            <param name="text">内容</param>
            <param name="title">标题</param>
            <param name="showBtn">显示按钮</param>
            <param name="focusBtn">焦点按钮</param>
            <param name="hdl">窗体句柄</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.showDialogWithoutMainFormHandle(Lenovo.HIS.Entities.EnumMsgType,System.String,System.String,Lenovo.HIS.Entities.EnumMsgBtnType,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            弹出窗体
            </summary>
            <param name="msgType">消息类型</param>
            <param name="text">内容</param>
            <param name="title">标题</param>
            <param name="showBtn">显示按钮</param>
            <param name="focusBtn">焦点按钮</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsg(System.String,System.String)">
            <summary>
            普通弹出文字窗体
            </summary>
            <param name="msgText">内容</param>
            <param name="title">标题</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgByStyle(System.String,System.Boolean,System.String)">
            <summary>
            普通弹出文字窗体,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
            </summary>
            <param name="msgText">内容</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
               ShowMsgByStyle("测试");
               
               //为false
               ShowMsgByStyle("&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsg(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            普通弹出文字窗体
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">内容</param>
            <param name="title">标题</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgByStyle(System.Windows.Forms.IWin32Window,System.String,System.Boolean,System.String)">
            <summary>
            普通弹出文字窗体,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">内容</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
               ShowMsgByStyle(this,"测试");
               
               //为false
               ShowMsgByStyle(this,"&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowErrorMsg(System.String,System.String)">
            <summary>
            错误信息
            </summary>
            <param name="msgText">内容</param>
            <param name="title">标题</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowErrorMsgByStyle(System.String,System.Boolean,System.String)">
            <summary>
            错误信息,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
            </summary>
            <param name="msgText">内容</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
               ShowErrorMsgByStyle("测试");
               
               //为false
               ShowErrorMsgByStyle("&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowErrorMsg(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            错误信息
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">内容</param>
            <param name="title">标题</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowErrorMsgByStyle(System.Windows.Forms.IWin32Window,System.String,System.Boolean,System.String)">
            <summary>
            错误信息,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">内容</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
               ShowErrorMsgByStyle(this,"测试");
               
               //为false
               ShowErrorMsgByStyle(this,"&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowErrorMsg2(System.String,System.String)">
            <summary>
            错误信息
            </summary>
            <param name="msgText">内容</param>
            <param name="title">标题</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowErrorMsg2ByStyle(System.String,System.Boolean,System.String)">
            <summary>
            错误信息,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
            </summary>
            <param name="msgText">内容</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
               ShowErrorMsg2ByStyle("测试");
               
               //为false
               ShowErrorMsg2ByStyle("&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowWarningMsg(System.String,System.String)">
            <summary>
            警告信息
            </summary>
            <param name="msgText">内容</param>
            <param name="title">标题</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowWarningMsgByStyle(System.String,System.Boolean,System.String)">
            <summary>
            警告信息,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
            </summary>
            <param name="msgText">内容</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
               ShowWarningMsgByStyle("测试");
               
               //为false
               ShowWarningMsgByStyle("&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowWarningMsg(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            警告信息
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">内容</param>
            <param name="title">标题</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowWarningMsgByStyle(System.Windows.Forms.IWin32Window,System.String,System.Boolean,System.String)">
            <summary>
            警告信息,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">内容</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
               ShowWarningMsgByStyle(this,"测试");
               
               //为false
               ShowWarningMsgByStyle(this,"&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgYesNo(System.String,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            是、否 
            </summary>
            <param name="msgText">文本</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在“是”上</param>
            <returns>true是  false否</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgYesNoByStyle(System.String,System.Boolean,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            是、否 ,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
            </summary>
            <param name="msgText">文本</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在“是”上</param>
            <returns>true是 false否</returns>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
              var result= ShowMsgYesNoByStyle("测试");
               
               //为false
              var result= ShowMsgYesNoByStyle("&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgYesNo(System.Windows.Forms.IWin32Window,System.String,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            是、否 
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">文本</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在“是”上</param>
            <returns>true是  false否</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgYesNoByStyle(System.Windows.Forms.IWin32Window,System.String,System.Boolean,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            是、否 ,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">文本</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在“是”上</param>
            <returns>true是  false否</returns>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
              var result= ShowMsgYesNo(this,"测试");
               
               //为false
              var result= ShowMsgYesNo(this,"&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgYesNoCancel(System.String,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            是、否、取消  三按钮消息
            </summary>
            <param name="msgText">文本</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在“是” 上</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgYesNoCancelByStyle(System.String,System.Boolean,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            是、否、取消  三按钮消息,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
                <group></group>
                <obsolete></obsolete>
            </summary>
            <param name="msgText">文本</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在“是” 上</param>
            <returns>枚举</returns>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
              EnumMsgResult result= ShowMsgYesNoCancelByStyle("测试");
               
               //为false
              EnumMsgResult result= ShowMsgYesNoCancelByStyle("&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgYesNoCancel(System.Windows.Forms.IWin32Window,System.String,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            是、否、取消  三按钮消息
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">文本</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在“是” 上</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgYesNoCancelByStyle(System.Windows.Forms.IWin32Window,System.String,System.Boolean,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
               是、否、取消  三按钮消息,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
              <group></group>
               <obsolete></obsolete>
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">文本</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在“是” 上</param>
            <returns>枚举</returns>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
              EnumMsgResult result= ShowMsgYesNoCancelByStyle(this,"测试");
               
               //为false
              EnumMsgResult result= ShowMsgYesNoCancelByStyle(this,"&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgOKCancel(System.String,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            确认与取消
            </summary>
            <param name="msgText">文本</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在确认上</param>
            <returns>确认true 取消false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgOKCancelByStyle(System.String,System.String,System.Boolean,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            确认与取消,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
              <group></group>
               <obsolete></obsolete>
            </summary>
            <param name="msgText">文本</param>
            <param name="title">标题</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="focusBtn">焦点按钮 默认在确认上</param>
            <returns>确认true 取消false</returns>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
               var result= ShowMsgOKCancelByStyle("测试");
               
               //为false
               var result= ShowMsgOKCancelByStyle("&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgOKCancel(System.Windows.Forms.IWin32Window,System.String,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            确认与取消
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">文本</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在确认上</param>
            <returns>确认true 取消false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgOKCancelByStyle(System.Windows.Forms.IWin32Window,System.String,System.Boolean,System.String,Lenovo.HIS.Entities.EnumMsgFocusBtn)">
            <summary>
            确认与取消,可以使用html样式进行自定义 [参阅地址](https://docs.devexpress.com/WindowsForms/4874/common-features/html-text-formatting)
              <group></group>
               <obsolete></obsolete>
            </summary>
            <param name="owner">窗体句柄</param>
            <param name="msgText">文本</param>
            <param name="isDefaultHtml">是否使用默认html样式,true:使用 false:不使用,当为false时需要自己将[msgText]传入html样式</param>
            <param name="title">标题</param>
            <param name="focusBtn">焦点按钮 默认在确认上</param>
            <returns>确认true 取消false</returns>
            <example>
               isDefaultHtml为true或false
               <code>
               //为true
              EnumMsgResult result= ShowMsgOKCancelByStyle(this,"测试");
               
               //为false
              EnumMsgResult result= ShowMsgOKCancelByStyle(this,"&lt;b&gt;测试&lt;/b&gt;",false);
               </code>
            </example>
            <exception cref="T:System.Exception">
            内部未捕获任何异常，当发生异常由框架自动捕获。
            </exception>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgBottomR(System.String,System.Int32)">
            <summary>
            右下角弹框
            </summary>
            <param name="msgtext">内容</param>
            <param name="timeFade">自动隐藏时间</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgBottomR(System.String)">
            <summary>
            右下角弹框
            </summary>
            <param name="msgtext">内容</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgBottomR(System.String,System.String,System.Boolean)">
            <summary>
            右下角弹窗
            </summary>
            <param name="title">标题</param>
            <param name="msgtext">内容</param>
            <param name="confirm">是否确认消失</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgBottomR(System.String,System.Boolean)">
            <summary>
            右下角弹窗
            </summary>
            <param name="msgtext">内容</param>
            <param name="confirm">是否确认消失</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.ShowMsgBottomR(System.String,System.String,System.Int32)">
            <summary>
            右下角消息
            </summary>
            <param name="title">标题</param>
            <param name="msgtext">内容</param>
            <param name="timeFade">自动消失时间</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.BubbleMessage(System.Windows.Forms.Form,Lenovo.HIS.Entities.EnumMsgType,System.String,System.Int32,System.Int32)">
            <summary>
            气泡消息提示
            </summary>
            <param name="formname">窗体实例</param>
            <param name="MsgType">消息类型</param>
            <param name="StrMsg">消息文本</param>
            <param name="focus"></param>
            <param name="autoFormDelay">显示时间</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMessage.BubbleMessage(System.Windows.Forms.Form,Lenovo.HIS.Entities.EnumMsgType,System.String,System.Int32)">
            <summary>
            气泡消息提示
            </summary>
            <param name="Formname">窗体实例</param>
            <param name="TypeMsg">消息类型</param>
            <param name="StrMsg">消息文本</param>
            <param name="showTime">显示时间  单位毫秒</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncPlugin">
            <summary>
            客户端插件处理类
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncPlugin.m_IsLoad">
            <summary>
            是否已加载
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPlugin.LoadPlugins(System.Object)">
            <summary>
            加载窗体中所有插件信息
            </summary>
            <param name="objClass">类</param>
            <returns>加载完成成功true 加载失败false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPlugin.InitPlugin(System.Object,System.String,System.String)">
            <summary>
            检验插件文件 非webservice
            </summary>
            <param name="objClass">类</param>
            <param name="nameSpace">命名空间</param>
            <param name="className">类名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPlugin.ExecPlugin(System.String,System.Object[],System.Collections.Generic.List{System.Object}@)">
            <summary>
            插件执行方法
            </summary>
            <param name="evenName">插件名称</param>
            <param name="_args">参数集合</param>
            <param name="returnObjList">插件返回结果集</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPlugin.ExecPlugin2(System.String,System.Object[],System.Collections.Generic.List{System.Object}@,System.Boolean)">
            <summary>
            插件执行方法
            </summary>
            <param name="evenName">插件名称</param>
            <param name="_args">参数集合</param>
            <param name="returnObjList">插件返回结果集</param>
            <param name="isSingleton">是否单例模式</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPlugin.InvokeWebService(System.String,System.String,System.Object[])">
            <summary>
            WebService调用类
            </summary>
            <param name="uri">地址</param>
            <param name="methodname">方法名</param>
            <param name="para">参数</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.ProxyBase">
            <summary>
            代理类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyBase.#ctor(System.String)">
            <summary>
            公共服务代理 <see cref="T:Lenovo.HIS.cUtils.ProxyBase"/> class.
            </summary>
            <param name="wcfAddress">The WCF address.</param>
            <example>
              <code>
            </code>
             </example>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:Lenovo.HIS.cUtils.ProxyInit">
            <summary>
            加载数据
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.#ctor(System.String)">
            <summary>
            传入地址进行构造
            </summary>
            <param name="address">通讯地址</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetTableAll(System.String,System.String)">
            <summary>
            根据表名，全表加载数据,基础数据用
            </summary>
            <param name="tableName">表名</param>
            <param name="timeSignName">时间戳字段</param>
            <returns>查询到的数据</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetTableAllByTime(System.String,System.String,System.DateTime,System.String)">
            <summary>
            获取数据通用方法
            </summary>
            <param name="tableName">表名</param>
            <param name="timeSignName">暂未用</param>
            <param name="dt">暂未用</param>
            <param name="dbname">数据库</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetTableFiledsByWhere(System.String,System.String,System.String,System.String)">
            <summary>
            根据条件查询通用方法
            </summary>
            <param name="tableName">表名</param>
            <param name="filedNames">字段</param>
            <param name="sqlWhere">条件</param>
            <param name="dbname">数据库</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetTableAllByField(System.String,System.String,System.String)">
            <summary>
            根据字段查询表数据
            </summary>
            <param name="tableName">表名</param>
            <param name="filedName">字段名</param>
            <param name="Value">值</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetMenuInfo(System.String)">
            <summary>
            获取菜单信息
            </summary>
            <param name="appCode">应用代码</param>
            <returns>菜单信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.BatchInsert(System.Data.DataTable,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            批量插入数据
            </summary>
            <param name="dt">要保存的数据</param>
            <param name="tableName">数据库表名</param>
            <param name="listDBColumnName">数据库列名列表，必须和dt列数相同</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetTableStructure(System.String,System.String)">
            <summary>
            获取表结构
            </summary>
            <param name="userId">用户ID</param>
            <param name="tableName">表名</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetCNArea">
            <summary>
            获取街道信息
            </summary>
            <returns>街道信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetICD10">
            <summary>
            获取ICD10
            </summary>
            <returns>icd10信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetTCD">
            <summary>
            获取TCD信息
            </summary>
            <returns>tcd信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetState">
            <summary>
            获取国家
            </summary>
            <returns>国家信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetNation">
            <summary>
            民族
            </summary>
            <returns>民族信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetWorkUnit">
            <summary>
            工作单位
            </summary>
            <returns>工作单位信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetDoctor">
            <summary>
            获取医生信息
            </summary>
            <returns>医生信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetNurse">
            <summary>
            获取护士信息
            </summary>
            <returns>护士信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetDepts">
            <summary>
            获取科室信息
            </summary>
            <returns>科室信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetUsers">
            <summary>
            获取所有用户信息
            </summary>
            <returns>人员信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetUserToRoleList">
            <summary>
            获取所有用户角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetUsersPho(System.Int32)">
            <summary>
            获取用户照片
            </summary>
            <param name="userid">用户ID</param>
            <returns>照片信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetChargesTimePoint(System.DateTime)">
            <summary>
            获取收费项目
            </summary>
            <param name="dt">时间</param>
            <returns>收费项目信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetCharges(System.DateTime,System.Int32)">
            <summary>
            获取院区收费项目
            </summary>
            <param name="dt">时间</param>
            <param name="areaId">院区ID</param>
            <returns>院区收费项目信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetDrugs(System.String,System.DateTime)">
            <summary>
            药品
            </summary>
            <param name="ViewName">视图名</param>
            <param name="dt">时间</param>
            <returns>药品信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetBaseDrugs(System.String,System.DateTime)">
            <summary>
            基础药品
            </summary>
            <param name="ViewName">视图名</param>
            <param name="dt">时间</param>
            <returns>基础药品字典</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetDrugsAlias(System.String,System.DateTime)">
            <summary>
            药品别名
            </summary>
            <param name="ViewName">视图名</param>
            <param name="dt">时间</param>
            <returns>药品别名</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetChargePackages(System.DateTime,System.Int32)">
            <summary>
            收费项目包装信息
            </summary>
            <param name="dt">时间</param>
            <param name="areaId">院区ID</param>
            <returns>收费项目包装信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetChargePackageDetails(System.DateTime,System.Int32)">
            <summary>
            收费项目明细信息
            </summary>
            <param name="dt">时间</param>
            <param name="areaId">院区ID</param>
            <returns>收费项目明细信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetChargeList(System.DateTime,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            收费项目列表
            </summary>
            <param name="chargeUpdateTime">收费项目最后时间</param>
            <param name="ipopUpdateTime">药典最后时间</param>
            <param name="ipopAliasUpdateTime">药品带别名</param>
            <param name="areaID">院区ID</param>
            <returns>收费项目列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetChargeListServer(System.Int32)">
            <summary>
            服务端缓存的收费项目列表
            </summary>
            <param name="areaID">院区ID</param>
            <returns>服务端缓存的收费项目列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetChargesExternServer(System.String)">
            <summary>
            服务端缓存的收费项目扩展信息列表
            </summary>
            <param name="areaCode">院区ID</param>
            <returns>服务端缓存的收费项目扩展信息列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetNoticeInfo">
            <summary>
            获取公告信息
            </summary>
            <returns>获取公告信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetNoticeUser(System.String)">
            <summary>
            获取用户公告信息
            </summary>
            <param name="sqlWhere">条件</param>
            <returns>获取用户公告信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.SaveNoticeUser(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityNoticeUser})">
            <summary>
            保存用户公告信息
            </summary>
            <param name="noticeUser">用户公告列表</param>
            <returns>保存用户公告信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetMSGGroup">
            <summary>
            消息分组信息
            </summary>
            <returns>消息分组信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetMSGGroupMember">
            <summary>
            消息人员分组
            </summary>
            <returns>消息人员分组</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetSmsContent">
            <summary>
            短信内容
            </summary>
            <returns>短信内容</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetTransactionLogs(System.String,System.String,System.String)">
            <summary>
            获取日志
            </summary>
            <param name="from">开始时间</param>
            <param name="to">截止时间</param>
            <param name="ip">IP</param>
            <returns>获取日志</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.DeleteTransactionLogs(System.String,System.String,System.String)">
            <summary>
            删除日志
            </summary>
            <param name="from">开始时间</param>
            <param name="to">截止时间</param>
            <param name="ip">IP</param>
            <returns>删除日志</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetAppWcfs">
            <summary>
            获取App对应wcf信息
            </summary>
            <returns>获取App对应wcf信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetSwitches(System.String[])">
            <summary>
            获取开关信息
            </summary>
            <param name="keys">服务名</param>
            <returns>获取开关信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetSQLTraceLogs(Lenovo.HIS.Entities.EntityLogWhere)">
            <summary>
            查询日志
            </summary>
            <param name="logWhere">应用</param>
            <returns>日志结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.GetAllPatBadCredit(System.String)">
            <summary>
            获取患者不良信息
            </summary>
            <param name="patcode">患者代码</param>
            <returns>患者不良信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyInit.AddPatBadCredit(Lenovo.HIS.Entities.EntityPatBadCredit)">
            <summary>
            新增患者不良信息
            </summary>
            <param name="pbc">患者不良信息</param>
            <returns>成功true  失败false</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.ProxyLogin">
            <summary>
            登录代理
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetPermByUser(System.Int32)">
            <summary>
            获取用户所有权限
            </summary>
            <param name="UserId">人员ID</param>
            <returns>用户所有权限列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetPermByUserList(System.Int32)">
            <summary>
            获取用户所有权限
            </summary>
            <param name="UserId">人员ID</param>
            <returns>用户所有权限列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetAppInfo">
            <summary>
            获取app
            </summary>
            <returns>app信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetAllClient">
            <summary>
            获取所有客户端
            </summary>
            <returns>所有客户端</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetLoginUser(System.String)">
            <summary>
            获取登陆用户
            </summary>
            <param name="number">工号</param>
            <returns>登陆用户</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.UpdateUser(Lenovo.HIS.Entities.EntityUser)">
            <summary>
            修改登陆用户
            </summary>
            <param name="user">用户信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.InsertReg(Lenovo.HIS.Entities.EntityClient)">
            <summary>
            注册
            </summary>
            <param name="client">客户端信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.ModifyReg(Lenovo.HIS.Entities.EntityClient)">
            <summary>
            重新注册
            </summary>
            <param name="client">客户端信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetClientIP">
            <summary>
            IP
            </summary>
            <returns>ip信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetWcfConfigs">
            <summary>
            获取WCFconfig信息
            </summary>
            <returns>wcf配置信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetClientInfo(System.String,System.String,System.String,System.String)">
            <summary>
            获取客户端注册信息
            </summary>
            <param name="hostName">机器名</param>
            <param name="IpAddress">IP地址</param>
            <param name="MACAdress">mac地址</param>
            <param name="_regType">客户端获取配置的模式，机器名、IP、MAC，按照那种模式获取对应的值就不能为空</param>
            <returns>客户端注册信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetDefaultMenuByUser(System.Int32)">
            <summary>
            获取用户默认菜单
            </summary>
            <param name="UserId">用户ID</param>
            <returns>默认菜单信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyLogin.GetAdmin(System.Int32)">
            <summary>
            获取管理员
            </summary>
            <param name="adminId">管理员工号</param>
            <returns>管理员信息</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.ProxyUtils">
            <summary>
            工具类通讯层
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.GetDbDateTime">
            <summary>
            获取服务器时间
            </summary>
            <returns>服务器时间</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.GetSequence(Lenovo.HIS.Entities.EnumSequencecs,System.String,System.String,System.String,System.String)">
            <summary>
            获取Sequence
            </summary>
            <param name="seq">库或前缀，例如HIS、CIS等</param>
            <param name="typeName">类型名称</param>
            <param name="descname">描述</param>
            <param name="tableName">表名</param>
            <param name="columnName">列名</param>
            <returns>Sequence值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.GetSequenceList(Lenovo.HIS.Entities.EnumSequencecs,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            批量获取Sequence
            </summary>
            <param name="seq">库或前缀，例如HIS、CIS等</param>
            <param name="typeName">类型名称</param>
            <param name="descname">描述</param>
            <param name="tableName">表名</param>
            <param name="columnName">列名</param>
            <param name="count">数量</param>
            <returns>Sequence值列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.GetConfig(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            获取配置
            </summary>
            <param name="config">配置信息</param>
            <returns>配置值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.UpdateConfig(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityConfig})">
            <summary>
            更新配置
            </summary>
            <param name="listconfig">配置列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.UpdateConfigActiveTime(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            更新配置最后使用时间
            </summary>
            <param name="config">配置信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.DeleteConfig(System.DateTime)">
            <summary>
            删除配置
            </summary>
            <param name="date">删除时间</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.ModifyApp(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityApp})">
            <summary>
            修改应用
            </summary>
            <param name="appList">应用列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.ModifyAppSSO(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityApp})">
            <summary>
            修改应用SSO
            </summary>
            <param name="appList">应用列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.ModifyMenu(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityMenu})">
            <summary>
            修改菜单
            </summary>
            <param name="menuList">菜单列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.ModifyMenuSSO(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityMenu})">
            <summary>
            修改菜单
            </summary>
            <param name="menuList">菜单列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.RegisterMenu(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityMenu})">
            <summary>
            菜单注册
            </summary>
            <param name="menuList">菜单列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.SaveMenuHelp(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityMenuHelp})">
            <summary>
            保存菜单帮助信息
            </summary>
            <param name="menuList">菜单帮助信息列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.GetAllConfig(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            获取所有配置信息
            </summary>
            <param name="config">配置信息</param>
            <returns>所有配置信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.GetGlobalConfigByName(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            根据条件获取全局配置
            </summary>
            <param name="config">配置信息</param>
            <returns>配置集合</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.GetConfigs(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            获取所有配置信息
            </summary>
            <param name="config">配置信息</param>
            <returns>配置信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.GetConfigsList(Lenovo.HIS.Entities.EntityConfig)">
            <summary>
            获取所有配置信息
            </summary>
            <param name="config">配置信息</param>
            <returns>配置信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.PluginInsert(Lenovo.HIS.Entities.EntityPlugin)">
            <summary>
            新增插件
            </summary>
            <param name="plugin">插件信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.PluginUpdate(Lenovo.HIS.Entities.EntityPlugin)">
            <summary>
            更新插件
            </summary>
            <param name="plugin">插件信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.HotkeySet(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityHotkey})">
            <summary>
            快捷键设置
            </summary>
            <param name="listHotkey">快捷键列表</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.HotkeySelect(System.String,System.Int32)">
            <summary>
            查询快捷键
            </summary>
            <param name="appcode">应用代码</param>
            <param name="userID">用户ID</param>
            <returns>快捷键信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.KeyTipSet(Lenovo.HIS.Entities.EntityMenu)">
            <summary>
            菜单快捷键提示上设置
            </summary>
            <param name="menu">菜单信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.KeyTipSelect(Lenovo.HIS.Entities.EntityMenu)">
            <summary>
            菜单快捷键提示查询
            </summary>
            <param name="menu">菜单信息</param>
            <returns>菜单信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.PermissionAdd(Lenovo.HIS.Entities.EntityPerm)">
            <summary>
            新增权限
            </summary>
            <param name="perm">权限信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.SaveDefaultMenu(Lenovo.HIS.Entities.EntityDefaultMenu)">
            <summary>
            保存用户默认菜单
            </summary>
            <param name="dfMenu"></param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.QueryComByWhere(System.String,System.String,System.String)">
            <summary>
            通用查询
            </summary>
            <param name="TbName">表名</param>
            <param name="SqlWhere">查询条件</param>
            <param name="ColNames">列名称集合，逗号隔开，例如：Code,Name,PyCode,WbCode</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.QueryData(Lenovo.HIS.Entities.EntityReport)">
            <summary>
            查询数据
            </summary>
            <param name="report">报表</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.AddTransactionLog(Lenovo.HIS.Entities.EntityTransactionLog)">
            <summary>
            添加业务日志
            </summary>
            <param name="log">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.CanTransactionLog(Lenovo.HIS.Entities.EntityTransactionLog)">
            <summary>
            判断是否可以添加该服务对应业务日志
            </summary>
            <param name="log">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.SaveSmsSendLog(Lenovo.HIS.Entities.EntitySmsSendLog)">
            <summary>
            保存短信发送日志
            </summary>
            <param name="log">短信日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.GetLogSwitches(System.String)">
            <summary>
            获取日志开关
            </summary>
            <param name="ip">IP</param>
            <returns>日志开关信息</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.AddLogSwitch(Lenovo.HIS.Entities.EntityLogSwitch)">
            <summary>
            新增日志开关
            </summary>
            <param name="ls">日志开关信息</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.UpdateLogSwitch(Lenovo.HIS.Entities.EntityLogSwitch)">
            <summary>
            更新日志开关
            </summary>
            <param name="ls">日志开关信息</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.SetSQLlogRedis(Lenovo.HIS.Entities.EntityLogInf)">
            <summary>
            sql日志跟踪设置，客户端不直接写redis，通过该方法写，只在服务端增加redis配置即可
            系统登录时写入redis客户端ID
            快捷键 CTR+ALT+L 开启记录日志（默认记录30分钟），服务端根据客户端ID判断是否记录该客户端的日志
            </summary>
            <param name="logInf">日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.getSQLlogRedis(System.Int32)">
            <summary>
            获取客户端的应用开启关闭配置
            </summary>
            <param name="clientID">客户端ID</param>
            <returns>配置列表</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyUtils.SaveLoginLog(Lenovo.HIS.Entities.EntityLoginInf)">
            <summary>
            保存登录退出日志
            </summary>
            <param name="log">登录日志信息</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.PubConfig">
            <summary>
            配置信息
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_mSaveType">
            <summary>
            表头样式本地保存类型
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cIocnPath">
            <summary>
            图标文件
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cLockTime">
            <summary>
            系统超时锁定值(秒)
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cCompanyTitle">
            <summary>
            企业标题信息
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cOpenMsg">
            <summary>
            是否开启消息
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cArea">
            <summary>
            当前医院简称
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cConfigDeptCode">
            <summary>
            当前科室代码
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cConfigWardCode">
            <summary>
            当前病区代码
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cConfigPharmacy">
            <summary>
            当前药房药库代码
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cInputPsw">
            <summary>
            切换应用是否再次输入密码
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cAreaCode">
            <summary>
            当前院区代码
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cshowMonth">
            <summary>
            年龄低于*岁显示月
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cshowDay">
            <summary>
            年龄低于*岁*月显示天
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cshowHour">
            <summary>
            年龄低于*月*天显示小时
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cshowMinute">
            <summary>
            年龄低于*月*天*小时显示分钟
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_cprintType">
            <summary>
            打印模式
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_isSSOData">
            <summary>
            启用SSO基础数据对接
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_CanLogSwitch">
            <summary>
            日志开关
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_MQSwitch">
            <summary>
            MQ消息开关
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_PluginSwitch">
            <summary>
            Plugin开关
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConfig.g_PluginList">
            <summary>
            Plugin列表
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubConfig.InitialConfig(System.String)">
            <summary>
            配置初始化
            </summary>
            <param name="formFullName">form类全名</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.PubConst">
            <summary>
            客户端全局常量
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConst.BaseAppCode">
            <summary>
            基础框架虚拟的AppCode，实际并不存于数据库的应用表中
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConst.WarningText">
            <summary>
            警告消息的标题
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConst.NormalText">
            <summary>
            正常提示消息标题
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConst.ErrorText">
            <summary>
            错误消息标题
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubConst.PubEndPoint">
            <summary>
            框架终结点名称
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.PubDataInit">
            <summary>
            基础数据主动加载类 需调用
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetNowHosArea">
            <summary>
            获取当前院区信息
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetEnumDict(System.Boolean)">
            <summary>
            加载枚举字典实体集合
            </summary>
            <param name="valid">是否查询最新数据true查询数据库  false缓存为空时再查询数据库 默认false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetAccountType(System.Boolean)">
            <summary>
            加载结算类型实体集合
            </summary>
            <param name="valid">是否查询最新数据true查询数据库  false缓存为空时再查询数据库 默认false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetCardType(System.Boolean)">
            <summary>
            加载卡类型实体集合
            </summary>
            <param name="valid">是否查询最新数据true查询数据库  false缓存为空时再查询数据库 默认false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetUsers(System.Boolean)">
            <summary>
            加载操作员集合
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetUsers2">
            <summary>
            获取人员信息
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetDoctor(System.Boolean)">
            <summary>
            加载医生集合
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetNurse(System.Boolean)">
            <summary>
            加载护士集合
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetICD10(System.Boolean)">
            <summary>
            加载ICD10集合
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetStates(System.Boolean)">
            <summary>
            加载国家代码集合
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetAreas(System.Boolean)">
            <summary>
            加载地区字典代码集合
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetNations(System.Boolean)">
            <summary>
            加载民族集合
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetTCD(System.Boolean)">
            <summary>
            加载TCD集合
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetGlobalConfig(System.Boolean)">
            <summary>
            获取当前应用全院配置
            </summary>
            <param name="refresh">是否重新加载</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetGlobalConfig2">
            <summary>
            获取全局配置
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetMachineConfig(System.Boolean)">
            <summary>
            获取当前应用单机配置
            </summary>
            <param name="refresh">是否重新加载</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetMachineConfig2">
            <summary>
            获取单机配置
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetPersonalConfig(System.Boolean)">
            <summary>
            获取当前应用个人配置
            </summary>
            <param name="refresh">是否重新加载</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetChargesItemType(System.Boolean)">
            <summary>
            获取收费项目类型
            </summary>
            <param name="refresh">是否刷新</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetChargesItemStatistics(System.Boolean)">
            <summary>
            获取收费项目统计类别
            </summary>
            <param name="refresh">是否刷新</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetChargesPackages(System.Boolean)">
            <summary>
            获取套餐
            </summary>
            <param name="refresh">是否刷新</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetChargePackageDetails(System.Boolean)">
            <summary>
            获取收费项目类型
            </summary>
            <param name="refresh">是否刷新</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetCharges(System.Boolean)">
            <summary>
            获取收费项目(包括套餐)
            </summary>
            <param name="refresh">是否刷新</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubDataInit.ts">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubDataInit._RecordTime">
            <summary>
            获取并更新服务器时间
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.UpdateServerTime">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetDBTime">
            <summary>
            获取数据库时间
            </summary>
            <returns>数据库时间</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetBaseInfo(System.Boolean)">
            <summary>
            基础信息
            </summary>
            <param name="refresh">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetMSGGroup(System.Boolean)">
            <summary>
            加载操消息分组
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetMSGGroupMember(System.Boolean)">
            <summary>
            加载操消息分组
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubDataInit.GetSmsContent(System.Boolean)">
            <summary>
            加载短信集合
            </summary>
            <param name="valid">是否刷新加载 默认为false</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.PubVar">
            <summary>
            客户端缓存全局变量
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListUserApp">
            <summary>
            当前用户应用程序集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_APP">
            <summary>
            当前进入的APP
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_APPCode">
            <summary>
            当前APP代码
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_ListImage16">
            <summary>
            16图标集合
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_ListImage32">
            <summary>
            32图标集合
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_ListImage64">
            <summary>
            应用图标集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_HostName">
            <summary>
            机器名
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_IPAddress">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_MACAddress">
            <summary>
            MAC地址
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_Memory">
            <summary>
            内存信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_SystemName">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_ServerDateTime">
            <summary>
            服务器时间
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ServerDateTimeNow">
            <summary>
            服务器时间,该时间每1S更新一次
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ServerDateTimeR">
            <summary>
            服务器时间（实时获取服务器，给业务系统用）
            </summary>
            <summary>
            服务器时间
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_dictAddress">
            <summary>
            地址，类名
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_MenuReg">
            <summary>
            注册菜单
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListPermission">
            <summary>
            当前操作员权限集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListAllPermission">
            <summary>
            所有权限集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListDefaultMenu">
            <summary>
            当前操作员默认菜单集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_Client">
            <summary>
            当前客户端
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListWcf">
            <summary>
            Wcf通讯连接列表集合加载
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_WcfEndPoint">
            <summary>
            Wcf通讯连接节点集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_WebApiEndPoint">
            <summary>
            WebApi通讯连接节点集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListDept">
            <summary>
            科室信息集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListHosArea">
            <summary>
            院区信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_HosArea">
            <summary>
            当前登录的院区
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListDoctor">
            <summary>
            医生集合， 可通过cUtils PubDataInit类预加载
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListNurse">
            <summary>
            护士集合 可通过cUtils PubDataInit类预加载
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListAppMenu">
            <summary>
            当前应用的菜单集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_AppMenu">
            <summary>
            当前打开的菜单,在非打开的菜单页面时为null
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListUser">
            <summary>
            操作员集合 可通过cUtils PubDataInit类预加载
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_User">
            <summary>
            当前操作员
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_UserName">
            <summary>
            操作员名称
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_UserID">
            <summary>
            操作员id
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_UserNumber">
            <summary>
            操作员工号
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar._ListRoleAll">
            <summary>
            所有角色信息集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListRoleAll">
            <summary>
            所有角色信息集合
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar._CurrRole">
            <summary>
            当前角色信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_CurrRole">
            <summary>
            当前角色信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_IsAdmin">
            <summary>
            是否管理员登录
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_fmMain">
            <summary>
            主窗体中间pannel
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_HeadRibbon">
            <summary>
            主窗体头部的ribbon对象
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_MainPanel">
            <summary>
            主窗体中间pannel
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListPlugin">
            <summary>
            有效插件集合
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_ListObj">
            <summary>
            缓存对象集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_BaseAddress">
            <summary>
            基础服务链接地址
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_BaseAddressCache">
            <summary>
            缓存基础服务连接地址
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ICD10List">
            <summary>
            ICD10
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_TCDList">
            <summary>
            TCD
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_NationList">
            <summary>
            民族列表
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_StateList">
            <summary>
            国家列表
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_AreaList">
            <summary>
            区县列表 PubDataInit.GetAreas 预加载
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_EnumDict">
            <summary>
            系统_枚举字典信息表中数据  PubDataInit.GetEnumDict 预加载
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_CardType">
            <summary>
            所有支持的卡类型集合，可使用PubDataInit.GetCardType预加载
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_AccountType">
            <summary>
            结算类型集合，可使用PubDataInit.GetAccountType
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_GlobalConfig">
            <summary>
            全院配置集合
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_MachineConfig">
            <summary>
            本机配置集合
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_PersonalConfig">
            <summary>
            当前用户个人配置集合
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_GlobalConfigAllTemp">
            <summary>
            全院配置集合（所有应用）
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_MachineConfigAllTemp">
            <summary>
            本机配置集合（本机所有应用）
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_InitRibbonFormName">
            <summary>
            当前加载的ribbon对应的form名称
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.m_Hotkeys">
            <summary>
            快捷键对应集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_Charges">
            <summary>
            收费项目列表 使用FuncCharges.ChargeListRefresh进行差异更新
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ChargesType">
            <summary>
            收费项目列表 使用FuncCharges.ChargeListRefresh进行差异更新
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ChargesTypeStatistics">
            <summary>
            收费项目统计类别列表
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_DeptCode">
            <summary>
            当前机器注册科室代码
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ConfigDeptCode">
            <summary>
            单机 配置的科室代码
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ConfigWardCode">
            <summary>
            单机 配置的病区代码
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ConfigPharmacy">
            <summary>
            单机 配置的药房药库代码
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_BarItemDept">
            <summary>
            左下角科室、病区、药房 显示
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListChargePackage">
            <summary>
            套餐集合，使用FuncCharges.ChargePackageListRefresh进行差异更新
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListChargePackageDetail">
            <summary>
            套餐明细集合,使用FuncCharges.ChargePackageDetailListRefresh进行差异更新
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ChangeAppByPsw">
            <summary>
            切换应用时是否需要再次验证
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_AppClosingDelegate">
            <summary>
            关闭客户端时，由各app各自决定是否需要继续关闭
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_AppChangeDelegate">
            <summary>
            应用切换时
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_MainFormHandle">
            <summary>
            主状体窗口句柄
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_BaseList">
            <summary>
            基础信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar._ListMSGGroup">
            <summary>
            消息组
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListMSGGroup">
            <summary>
            操作员集合 可通过cUtils PubDataInit类预加载
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar._ListMSGGroupMember">
            <summary>
            消息组成员
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListMSGGroupMember">
            <summary>
            操作员集合 可通过cUtils PubDataInit类预加载
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar._ListSmsContent">
            <summary>
            短信发送列表
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_EntitySmsContent">
            <summary>
            短信列表集合
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ChangeDeptDelegate">
            <summary>
            左下角科室切换时，触发各应用各自数据刷新业务
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar._currentAreaCode">
            <summary>
            当前院区代码
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_CurrentAreaCode">
            <summary>
            单机 配置的当前院区
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ChargesExtern">
            <summary>
            收费项目列表 使用FuncCharges.ChargeListRefresh进行差异更新
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_isWriterCallServiceTime">
            <summary>
            是否记录调用服务的日志
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_isButtonPer">
            <summary>
            是否开启按钮控制功能
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_isButtonPerType">
            <summary>
            按钮权限控制方式：1显示隐藏方式   2显示禁用方式
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ListMenuConfigs">
            <summary>
            菜单配置
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_WinFormFullName">
            <summary>
            快捷键窗体类全名
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.PubVar.g_MenuCodes">
            <summary>
            第三方登录传入菜单集合，逗号隔开
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_ThirdOtherInfo">
            <summary>
            第三方登录传入的其他信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_LogSetting">
            <summary>
            设置信息
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.PubVar.g_lstNotice">
            <summary>
            获取列表
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.PubVar.GetlstNotice">
            <summary>
            获取列表
            </summary>
            <returns>公告列表</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.MsgStyleA">
            <summary>
            消息样式
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.MsgStyleA.mouseOffset">
            <summary>
            记录鼠标指针的坐标
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.MsgStyleA.isMouseDown">
            <summary>
            记录鼠标按键是否按下
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MsgStyleA.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MsgStyleA.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="text">消息内容</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MsgStyleA.#ctor(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="title">标题</param>
             <param name="text">内容</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MsgStyleA.GetOffsetX(System.Windows.Forms.Control)">
            <summary>
            递归得到指定控件偏移量X值
            </summary>
            <param name="sender">指定的控件</param>
            <returns>偏移量X值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MsgStyleA.GetOffsetY(System.Windows.Forms.Control)">
            <summary>
            递归得到指定控件偏移量Y值
            </summary>
            <param name="sender">指定的控件</param>
            <returns>偏移量Y值</returns>
        </member>
        <member name="F:Lenovo.HIS.cUtils.MsgStyleA.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MsgStyleA.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.MsgStyleA.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncInform">
            <summary>
            代办事项相关
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncInform.CreateInformForm">
            <summary>
            创建界面
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncInform.UpdateInformForm">
            <summary>
            更新界面
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncMenu">
            <summary>
            菜单处理类，跳转，装载，弹出
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMenu.InitMenuForm(Lenovo.HIS.Entities.EntityMenu,System.Int32)">
            <summary>
            菜单窗体初始化
            </summary>
            <param name="_Menu">菜单</param>
            <param name="showType">默认 -1 不指定，0 Main内部(需继承fmBase) 1 非内部</param>
            <returns>窗体</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMenu.MenuOpen(System.String,System.String)">
            <summary>
            打开窗体（不可多开）,有的话直接跳转,无 重新打开
            </summary>
            <param name="nameSpace">命名</param>
            <param name="className">类名</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMenu.MenuSkipSign(System.String)">
            <summary>
            根据菜单名称跳转到已打开的菜单,未打开不跳转，单一跳转,不可多开
            </summary>
            <param name="MenuName">菜单名称</param>
            <returns>false 跳转失败 没有打开菜单 true 成功</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMenu.IsOpenMenu(System.String,System.Boolean)">
            <summary>
            根据菜单ID判断 是否打开了菜单 是否直接跳转过去
            </summary>
            <param name="MenuID">菜单ID</param>
            <param name="isSelect">如果打开了是否直接跳转过去 默认是</param>
            <returns>true  false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMenu.MenuSkip(System.String,System.String,System.Object[])">
            <summary>
            跳转窗体,不多开，重新触发带参数的构造，所跳转的菜单必须再该应用下注册启用
            </summary>
            <param name="nameSpace">菜单命名空间</param>
            <param name="className">类名</param>
            <param name="refreshArgs">跳转刷新参数集合,默认为空</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMenu.MenuSkip(System.String,System.String,System.String,System.String,System.Object[],System.Object[])">
            <summary>
            菜单跳转，所跳转的菜单必须再该应用下注册启用
            </summary>
            <param name="nameSpace">菜单命名空间</param>
            <param name="className">类名</param>
            <param name="keyCode">菜单索引</param>
            <param name="caption">菜单标题</param>
            <param name="obj">构造参数集合</param>
            <param name="refreshArgs">跳转刷新参数集合,默认为空</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncMenu.IsOpen(System.String,System.String)">
            <summary>
            多开时跳转,不触发tab切换事件
            </summary>
            <param name="MenuID">菜单ID</param>
            <param name="tag">tag</param>
            <returns>打开true 未打开false</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncPermission">
            <summary>
            权限处理类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPermission.IsOwnPerm(System.String,System.String,Lenovo.HIS.Entities.EnumPermType)">
            <summary>
            判断是否有权限
            </summary>
            <param name="permName">权限名称</param>
            <param name="permExplain">权限说明</param>
            <param name="permType">权限类型 默认为功能权限</param>
            <returns>有权限true  无权限false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPermission.IsOwnAppPerm(System.String,System.String,Lenovo.HIS.Entities.EnumPermType)">
            <summary>
            判断是否有相应功能权限在特定应用内
            </summary>
            <param name="permName">权限名称</param>
            <param name="permExplain">权限说明</param>
            <param name="permType">权限类型 默认为功能权限</param>
            <returns>有权限true 无权限false</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncRibbon">
            <summary>
            ribbon控制类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.HotkeyRefresh(DevExpress.XtraBars.Ribbon.RibbonPage,System.String)">
            <summary>
            快捷键装载
            </summary>
            <param name="page">RibbonPage</param>
            <param name="menuName">菜单名</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.RibbonPageChange(System.Windows.Forms.Form)">
            <summary>
            窗体头部 ribbonpage重加载方法
            </summary>
            <param name="fm">需要加载按钮所在的窗体主体</param>
            <returns>成功加载true 失败false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.RibbonPageAdd(System.Windows.Forms.Form,Lenovo.HIS.Entities.EntityMenu,System.String,System.String)">
            <summary>
            反射获取子窗体的bar 然后添加到ribbonBar中
            </summary>
            <param name="fm">窗体</param>
            <param name="menu">菜单</param>
            <param name="formName">form名称</param>
            <param name="tag">控件tag</param>
            <returns>添加成功true 失败false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.g_ribbon_SelectedPageChanged(System.Object,System.EventArgs)">
            <summary>
            切换选项卡时，对应的窗体更改
            </summary>
            <param name="sender">事件源</param>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.RemoveRibbonPage(System.Boolean)">
            <summary>
            关闭子窗体时，把对应生成的RibbonPage移除
            </summary>
            <param name="showMsg">是否弹出关闭提醒 默认是</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.RemoveAllRibbonPages">
            <summary>
            关闭子窗体时，把对应生成的RibbonPage移除
            </summary>
            <returns>成功true 失败false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon._RibbonControl_MinimizedChanged(System.Object,System.EventArgs)">
            <summary>
            RibbonBar 显示/隐藏时 ToolBar相应的 
            </summary>
            <param name="sender">控件</param>
            <param name="e">时间参数</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.SetToolBarVisible(System.Boolean)">
            <summary>
            设置子程序中ToolBar的Visible属性
            </summary>
            <param name="visible">True/False</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.ChangeDisplayPage">
            <summary>
            切换显示页面
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncRibbon.FreeDelegate">
            <summary>
            按钮点击委托
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.AddToolButton(DevExpress.XtraBars.BarManager,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String,Lenovo.HIS.cUtils.FuncRibbon.FreeDelegate)">
            <summary>
            添加barmanager按钮
            </summary>
            <param name="_BarManager">需要添加的barmanager</param>
            <param name="_Caption">按钮文本</param>
            <param name="_Key">按钮name</param>
            <param name="_Image">按钮图标</param>
            <param name="_Visible">按钮可见</param>
            <param name="_Enable">按钮Enable</param>
            <param name="_Tip">按钮Tip</param>
            <param name="_Delegate">按钮执行的事件</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.AddToolButton(DevExpress.XtraBars.BarManager,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            添加barmanager按钮
            </summary>
            <param name="_BarManager">需要添加的barmanager</param>
            <param name="_Caption">按钮文本</param>
            <param name="_Key">按钮name</param>
            <param name="_Image">按钮图标</param>
            <param name="_Visible">按钮可见</param>
            <param name="_Enable">按钮Enable</param>
            <param name="_Tip">按钮Tip</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.AddPopupBtn(DevExpress.XtraBars.PopupMenu,System.String,System.String,System.Int32,Lenovo.HIS.cUtils.FuncRibbon.FreeDelegate)">
            <summary>
            为弹出菜单添加按钮
            </summary>
            <param name="_PopupMenu">需要处理的弹出菜单</param>
            <param name="_Caption">按钮显示名称</param>
            <param name="_Key">按钮Name</param>
            <param name="_Image">按钮显示图标</param>
            <param name="_Delegate">需要绑定的事件</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.InitBarManger(System.Windows.Forms.Form,System.String)">
            <summary>
            使用代码生成一个BarManger
            </summary>
            <param name="_Form">BarManger所属窗体</param>
            <param name="_Title">BarManger显示的标题</param>
            <returns>BarManger</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.InitPopupMenu(DevExpress.XtraBars.BarManager)">
            <summary>
            使用代码生成一个弹出菜单
            </summary>
            <param name="_BarManager">弹出菜单所属的BarManager</param>
            <returns>PopupMenu</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.SetBtnEnable(DevExpress.XtraBars.BarManager,System.String,System.Boolean)">
            <summary>
            设置按钮是否可用
            </summary>
            <param name="_BarManager">按钮所属BarManager</param>
            <param name="_Name">按钮名称</param>
            <param name="_Enable">是否可用</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.SetBtnVisible(DevExpress.XtraBars.BarManager,System.String,System.Boolean)">
            <summary>
            设置按钮是否可见
            </summary>
            <param name="_BarManager">按钮所属BarManager</param>
            <param name="_Name">按钮名称</param>
            <param name="_Visible">是否可见</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.SetBtnImage(DevExpress.XtraBars.BarManager,System.String,System.Int32)">
            <summary>
            设置按钮显示图标
            </summary>
            <param name="_BarManager">按钮所属BarManager</param>
            <param name="_Name">按钮名称</param>
            <param name="_ImageIndex">显示图标</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.SetBtnCaption(DevExpress.XtraBars.BarManager,System.String,System.String)">
            <summary>
            设置按钮的显示名称
            </summary>
            <param name="_BarManager">按钮所属BarManager</param>
            <param name="_Name">按钮名称</param>
            <param name="_Caption">显示名称</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.SetBtnTip(DevExpress.XtraBars.BarManager,System.String,System.String)">
            <summary>
            设置按钮的提示信息
            </summary>
            <param name="_BarManager">按钮所属BarManager</param>
            <param name="_Name">按钮名称</param>
            <param name="_Tip">提示信息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.GetBtnVisible(DevExpress.XtraBars.BarManager,System.String)">
            <summary>
            获取按钮是否显示
            </summary>
            <param name="_BarManager">按钮所属BarManager</param>
            <param name="_Name">按钮名称</param>
            <returns>显示true 不显示false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.GetBtnEnable(DevExpress.XtraBars.BarManager,System.String)">
            <summary>
            获取按钮是否可用
            </summary>
            <param name="_BarManager">按钮所属BarManager</param>
            <param name="_Name">按钮名称</param>
            <returns>true可用  false不可用</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.GetBtnCaption(DevExpress.XtraBars.BarManager,System.String)">
            <summary>
            获取按钮显示名称
            </summary>
            <param name="_BarManager">按钮所属BarManager</param>
            <param name="_Name">按钮名称</param>
            <returns>名称</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncRibbon.SetRibbonMinimized">
            <summary>
            最小化功能区
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncShortcutKey">
            <summary>
            快捷键相关
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncShortcutKey.KeyInit(System.Windows.Forms.Form)">
            <summary>
            初始化快捷键事件
            </summary>
            <param name="form"></param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncSqlLiteHelper">
            <summary>
            SqlLite帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.BulkInsertSql``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
            整体批量插入语句
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objs"></param>
            <param name="tableName">表名</param>
            <returns>列名</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.GetColmons``1(``0)">
            <summary>
            获得类型的列名
            </summary>
            <param name="obj">类型实体</param>
            <returns>列名</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.GetTList``1(System.String)">
            <summary>
            根据实体获取对应的sqllite数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="_where">查询条件 例如‘1=1’ 无需传入where</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.SaveTable``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
            部分数据更新,需传入作为主键的实体属性
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <param name="primaryKey"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.SaveTableAll``1(System.Collections.Generic.List{``0})">
            <summary>
            全表数据删除并重新插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.CreateTable(System.Type,System.String,System.String)">
            <summary>
            根据实体自动创建表
            </summary>
            <param name="type">类型实体</param>
            <param name="primaryKey">主键 可为空</param>
            <param name="tableName">表名</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.GetTable(System.String)">
            <summary>
            获取全表数据 
            </summary>
            <param name="tableName">无表时返回null</param>
            <returns>表数据</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.CreateTableByDt(System.Data.DataTable)">
            <summary>
            根据dt创建表
            </summary>
            <param name="_dt">数据集合</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.SaveDt(System.Data.DataTable,System.String)">
            <summary>
            保存datatable
            </summary>
            <param name="_dt">数据</param>
            <param name="PKCode">主键</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.BulkInsertSqlByDt(System.Data.DataTable)">
            <summary>
            通过dt获取insert语句
            </summary>
            <param name="dt">数据集</param>
            <returns>sql语句</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.CheckTable(System.String,System.Data.DataTable,System.Boolean)">
            <summary>
            检查表是否存在以及结构是否相同
            </summary>
            <param name="TableName">表名</param>
            <param name="dt"></param>
            <param name="IsDel">结构不同时是否删除</param>
            <returns>相同true 否则false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.CheckTable(System.String)">
            <summary>
            检查表是否存再
            </summary>
            <param name="TableName">表名</param>
            <returns>false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.CheckTable(System.String,System.Type)">
            <summary>
            创建表
            </summary>
            <param name="TableName">表名</param>
            <param name="t">类型</param>
            <returns>成功返回true 失败返回false</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.ExecutesqlTrans(System.Collections.Generic.List{System.String})">
            <summary>
            执行事务
            </summary>
            <param name="sqllist">SQL语句</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.Executesql(System.String)">
            <summary>
            执行语句
            </summary>
            <param name="sql">SQL语句</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.GetMaxTimePoint(System.String,System.String)">
            <summary>
            获取表中最大时间标志的值
            </summary>
            <param name="tableName">表名</param>
            <param name="TimeSignName"></param>
            <returns>时间</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSqlLiteHelper.QueryDt(System.String)">
            <summary>
            获取结果集
            </summary>
            <param name="sql">SQL语句</param>
            <returns>结果集</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncSquence">
            <summary>
            取种子相关
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSquence.GetSequence(Lenovo.HIS.Entities.EnumSequencecs,System.String,System.String,System.String,System.String)">
            <summary>
            客户端获取种子，最好加英文字符防止拼音重复，
            生成的种子为AUTO_+ Enumseq + "_" + _seq.TypeName（拼音）+ "_" + _seq.Desc(拼音);
            </summary>
            <param name="Enumseq">类型</param>
            <param name="typeName">分类名称</param>
            <param name="descname">描述名称</param>
            <param name="tableName">表名</param>
            <param name="columnName">列名称</param>
            <returns>Sequence值</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncSquence.GetSequenceList(Lenovo.HIS.Entities.EnumSequencecs,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            客户端获取种子，最好加英文字符防止拼音重复，
            生成的种子为AUTO_+ Enumseq + "_" + _seq.TypeName（拼音）+ "_" + _seq.Desc(拼音);
            </summary>
            <param name="Enumseq">类型</param>
            <param name="typeName">分类名称</param>
            <param name="descname">描述名称</param>
            <param name="tableName">表名</param>
            <param name="columnName">列名称</param>
            <param name="count">数量</param>
            <returns>Sequence值列表</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncStatus">
            <summary>
            有效值与无效值 相关函数
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.FuncStatus.LookUpEditSourse">
            <summary>
            绑定下拉数据源
            </summary>
            <returns>数据源列表</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncStringHelper">
            <summary>
            公共设置类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncStringHelper.GetStrings(System.String,Lenovo.HIS.Entities.EnumSplit)">
            <summary>
            返回分割后的数组
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="enumSplit">分割符枚举</param>
            <returns>分割后的数组字符串</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncStringHelper.GetStrings(System.String,System.String)">
            <summary>
            返回分割后的数组
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="split">分割符</param>
            <returns>分割后的数组字符串</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncStringHelper.GetStrings(System.String,System.Char)">
            <summary>
            返回分割后的数组
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="split">分割符</param>
            <returns>分割后的数组字符串</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncTest">
            <summary>
            测试
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTest.Test">
            <summary>
            测试方法
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncThread">
            <summary>
            异步处理帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncThread.TaskRun``1(System.Func{``0})">
            <summary>
            异步执行
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func">一个函数委托，可返回能够通过 System.Threading.Tasks.Task{TResult} 获得的将来结果。</param>
            <returns>异步执行结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncThread.TaskRun``1(System.Func{``0},System.Action{``0})">
            <summary>
            异步执行并回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func">一个函数委托，可返回能够通过 System.Threading.Tasks.Task{TResult} 获得的将来结果。</param>
            <param name="callBack">委托执行完后的回调函数</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncTypewritingHelper">
            <summary>
            按键、输入法等输入类型帮助类
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.FuncTypewritingHelper.CapsLockStatus2">
            <summary>
            当前大写锁定状态
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTypewritingHelper.SetCapitalLetters2(System.Windows.Forms.Control)">
            <summary>
            设置控件输入法为大写
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTypewritingHelper.CancelCapitalLetters2(System.Windows.Forms.Control)">
            <summary>
            取消控件输入法为大写
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTypewritingHelper.SetCapsLock2">
            <summary>
            按键CapsLock
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTypewritingHelper.SetShift2">
            <summary>
            按键Shift
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncUserPhoto">
            <summary>
            用户相关图片获取
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncUserPhoto.GetUserPhoto(System.Int32)">
            <summary>
            获取操作员照片
            </summary>
            <param name="_userid">用户ID</param>
            <returns>用户实体</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncUserPhoto.GetDoctorPhoto(System.Int32)">
            <summary>
            获取医生签名照
            </summary>
            <param name="_doctorid">医生ID</param>
            <returns>医生实体</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncUserPhoto.GetNursePhoto(System.Int32)">
            <summary>
            获取护士签名照
            </summary>
            <param name="_nurseid">护士ID</param>
            <returns>护士实体</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncVideoAPI">
            <summary>
            VideoAPI
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncVideoAPI.capCreateCaptureWindowA(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="IpszWindowsName"></param>
            <param name="dwStyle"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="nWidth"></param>
            <param name="nHeight"></param>
            <param name="hWndParent"></param>
            <param name="nID"></param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncVideoAPI.capGetDriverDescriptionA(System.Int16,System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="wDriver"></param>
            <param name="IpszName"></param>
            <param name="cbName"></param>
            <param name="IpszVer"></param>
            <param name="cbVer"></param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncVideoAPI.SendMessage(System.IntPtr,System.Int32,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="wMsg"></param>
            <param name="wParam"></param>
            <param name="IParam"></param>
            <returns></returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncVideoAPI.SendMessage(System.IntPtr,System.Int32,System.Int16,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="wMsg"></param>
            <param name="wParam"></param>
            <param name="IParam"></param>
            <returns></returns>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WM_USER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WS_CHILD">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WS_VISIBLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.SWP_NOMOVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.SWP_NOZORDER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WM_CAP_DRIVER_CONNECT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WM_CAP_DRIVER_DISCONNECT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WM_CAP_SET_CALLBACK_FRAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WM_CAP_SET_PREVIEW">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WM_CAP_SET_PREVIEWRATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WM_CAP_SET_VIDEOFORMAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WM_CAP_START">
            <summary>
            
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.FuncVideoAPI.WM_CAP_SAVEDIB">
            <summary>
            
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncVideo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncVideo.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            构造
            </summary>
            <param name="handle"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncVideo.StartWebCam2">
            <summary>
            打开视频设备
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncVideo.CloseWebCam2">
            <summary>
            关闭视频设备
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncVideo.GrabImage2(System.IntPtr,System.String)">
            <summary>
            拍照
            </summary>
            <param name="hWndc"></param>
            <param name="path"></param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncWait">
            <summary>
            等待处理相关
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncWait.WaitingExcute(System.Action,System.String)">
             <summary>
             旋转等待指定方法执行结束
             </summary>
             <param name="_method">无入参和返回值方法</param>
             <param name="_displayWaitStr">需要显示的等待消息</param>
            [Obsolete("此方法已过时; 请使用其它等待方法")]
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncWait.WaitingExcute(System.Windows.Forms.IWin32Window,System.Action,System.String)">
            <summary>
            旋转等待指定方法执行结束
            </summary>
            <param name="_handle">需要锁定为模式窗口的窗体</param>
            <param name="_method">无入参和返回值方法</param>
            <param name="_displayWaitStr">需要显示的等待消息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncWait.WaitingDoMethod(System.Windows.Forms.IWin32Window,Lenovo.HIS.Entities.EntityWaiting,Lenovo.HIS.cUtils.EnumWaiting)">
            <summary>
            单任务等待
            </summary>
            <param name="_handle">控制句柄</param>
            <param name="method">方法</param>
            <param name="wait">等待方式</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncWait.WaitingDoMethods(System.Windows.Forms.IWin32Window,System.Collections.Generic.List{Lenovo.HIS.Entities.EntityWaiting},Lenovo.HIS.cUtils.EnumWaiting)">
            <summary>
            多任务等待
            </summary>
            <param name="_handle">控制句柄</param>
            <param name="methods">方法列表</param>
            <param name="wait">等待方式</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncWait.WaitingRotate(System.Windows.Forms.IWin32Window,System.Action,System.String)">
            <summary>
            旋转等待指定方法执行结束
            </summary>
            <param name="_handle">窗体句柄</param>
            <param name="_method">无入参和返回值方法</param>
            <param name="_displayWaitStr">需要显示的等待消息</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EnumWaiting">
            <summary>
            等待类型
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumWaiting.Rotate">
            <summary>
            旋转等待
            </summary>
        </member>
        <member name="F:Lenovo.HIS.cUtils.EnumWaiting.ProgressBar">
            <summary>
            进度条
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncHostInfo">
            <summary>
            登陆机器信息相关
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHostInfo.GetNetCardMacAddress">
            <summary>
            取得设备网卡的MAC地址
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHostInfo.GetMacByNetworkInterface">
            <summary>
            通过NetworkInterface获取MAC地址
            </summary>
            <returns>MAC地址</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHostInfo.GetDiskVolumeSerialNumber">
            <summary>
            取得设备硬盘的卷标号
            </summary>
            <returns>设备硬盘的卷标号</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHostInfo.GetMemorySize">
            <summary>
            获取本机物理内存大小
            </summary>
            <returns>单位KB,返回0 说明获取物理内存失败!</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHostInfo.GetMemoryInfo">
            <summary>
            获取机器内存
            </summary>
            <returns>机器内存</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncHostInfo.GetCpuName">
            <summary>
            获取机器cpu信息
            </summary>
            <returns>机器cpu信息</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncWebAPI">
            <summary>
            WebAPI方法
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncWebAPI.HttpPost(System.String,System.Object)">
             <summary>
             POST
             </summary>
             <param name = "url" >地址</param >
            <param name="obj">内容</param>
             <returns>返回结果字符串</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncWebAPI.HttpGet(System.String)">
            <summary>
            GET
            </summary>
            <param name="url">地址</param>
            <returns>返回结果字符串</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.WSHelper">
            <summary>
            Web Service服务类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.WSHelper.InvokeWebService(System.String,System.String,System.Object[])">
            <summary>
            动态调用web服务 （不含有SoapHeader）
            </summary>
            <param name="url">WSDL服务地址</param>
            <param name="methodname">方法名</param>
            <param name="args">参数</param>
            <returns>接口返回结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.WSHelper.InvokeWebService(System.String,System.String,Lenovo.HIS.cUtils.WSHelper.SoapHeader,System.Object[])">
            <summary>
            动态调用web服务（含有SoapHeader）
            </summary>
            <param name="url">WSDL服务地址</param>
            <param name="methodname">方法名</param>
            <param name="soapHeader">头信息</param>
            <param name="args">参数</param>
            <returns>接口返回结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.WSHelper.InvokeWebService(System.String,System.String,System.String,Lenovo.HIS.cUtils.WSHelper.SoapHeader,System.Object[])">
            <summary>
            动态调用web服务
            </summary>
            <param name="url">WSDL服务地址</param>
            <param name="classname">类名</param>
            <param name="methodname">方法名</param>
            <param name="soapHeader">参数</param>
            <param name="args">参数</param>
            <returns>接口返回结果</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.WSHelper.SoapHeader">
            <summary>  
            构建SOAP头，用于SoapHeader验证  
            </summary>  
        </member>
        <member name="M:Lenovo.HIS.cUtils.WSHelper.SoapHeader.#ctor">
            <summary>  
            构造一个SOAP头  
            </summary>  
        </member>
        <member name="M:Lenovo.HIS.cUtils.WSHelper.SoapHeader.#ctor(System.String)">
            <summary>  
            构造一个SOAP头  
            </summary>  
            <param name="className">SOAP头的类名</param>  
        </member>
        <member name="M:Lenovo.HIS.cUtils.WSHelper.SoapHeader.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>  
            构造一个SOAP头  
            </summary>  
            <param name="className">SOAP头的类名</param>  
            <param name="properties">SOAP头的类属性名及属性值</param>  
        </member>
        <member name="P:Lenovo.HIS.cUtils.WSHelper.SoapHeader.ClassName">
            <summary>  
            SOAP头的类名  
            </summary>  
        </member>
        <member name="P:Lenovo.HIS.cUtils.WSHelper.SoapHeader.Properties">
            <summary>  
            SOAP头的类属性名及属性值  
            </summary>  
        </member>
        <member name="M:Lenovo.HIS.cUtils.WSHelper.SoapHeader.AddProperty(System.String,System.Object)">
            <summary>  
            为SOAP头增加一个属性及值  
            </summary>  
            <param name="name">SOAP头的类属性名</param>  
            <param name="value">SOAP头的类属性值</param>  
        </member>
        <member name="T:Lenovo.HIS.cUtils.ProxyBase`1">
            <summary>
            基础通讯类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyBase`1.#ctor">
            <summary>
            wcf通讯基类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.ProxyBase`1.#ctor(System.String)">
            <summary>
            wcf通讯基类
            </summary>
            <param name="hostAddress"></param>
        </member>
        <member name="P:Lenovo.HIS.cUtils.ProxyBase`1.HostAddress">
            <summary>
            主机地址
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncPrint">
            <summary>
            打印帮助类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPrint.Print(System.Data.DataSet,System.String,Lenovo.HIS.Entities.EnumPrintType,System.String)">
            <summary>
            打印
            </summary>
            <param name="reportData">数据源</param>
            <param name="frxName">模板名称</param>
            <param name="PrintType">打印方式</param>
            <param name="printerName">打印机名称，不传则调用默认打印机</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPrint.PrintByHospitalName(System.Data.DataSet,System.String,Lenovo.HIS.Entities.EnumPrintType,System.String,System.String)">
            <summary>
            打印方法，并且自动提供医院名称
            </summary>
            <param name="reportData">数据源</param>
            <param name="frxName">模板名称</param>
            <param name="PrintType">打印方式</param>
            <param name="printerName">打印机名称，不传则调用默认打印机</param>
            <param name="HospitalName">医院名称，若为空则自动读取配置名称</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncPrint.PrintByShowDialog(System.Data.DataSet,System.String,Lenovo.HIS.Entities.EnumPrintType,System.Boolean,System.String)">
            <summary>
            打印
            </summary>
            <param name="reportData">数据源</param>
            <param name="frxName">模板名称</param>
            <param name="PrintType">打印方式</param>
            <param name="printerName">打印机名称，不传则调用默认打印机</param>
            <param name="isShowDialog">是否显示弹窗</param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncTaskManage">
            <summary>
            等待进度条
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.FuncTaskManage.List">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTaskManage.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTaskManage.AddTask2(System.String,System.Action,System.Boolean)">
            <summary>
            添加task
            </summary>
            <param name="caption">等待显示标题</param>
            <param name="task">任务</param>
            <param name="isWait">任务</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTaskManage.AddTask2(System.String,System.Action)">
            <summary>
            添加task
            </summary>
            <param name="caption">等待显示标题</param>
            <param name="task">任务</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTaskManage.Executes2(System.Windows.Forms.Form)">
            <summary>
            开始执行task
            </summary>
            <param name="fm"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTaskManage.WaitAllNotSplash2(System.Windows.Forms.Form,System.Int32)">
            <summary>
            异步等待
            </summary>
            <param name="fm">窗体</param>
            <param name="threadNumber"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTaskManage.ExecutesWaitAll2(System.Windows.Forms.Form)">
            <summary>
            异步等待
            </summary>
            <param name="fm"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTaskManage.WaitAll2(System.Windows.Forms.Form)">
            <summary>
            异步等待
            </summary>
            <param name="fm"></param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTaskManage.AsyncExecute2">
            <summary>
            异步执行任务
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncTaskManage.ExecuteSingleTask2(System.Windows.Forms.Form,System.String,System.Action)">
            <summary>
            
            </summary>
            <param name="fm"></param>
            <param name="caption"></param>
            <param name="task"></param>
        </member>
        <member name="T:Lenovo.HIS.cUtils.EntityTask2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityTask2.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityTask2.Task">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityTask2.TaskIndex">
            <summary>
            任务序号
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityTask2.IsWait">
            <summary>
            是否等待结果
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityTask2.IsCompleted">
            <summary>
            任务是否完成
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityTask2.Result">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lenovo.HIS.cUtils.EntityTask2.AsyncTask">
            <summary>
            
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.FuncWcfProxy">
            <summary>
            WCF通讯通用处理
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncWcfProxy.Using``2(``0,System.Func{``0,``1})">
            <summary>
            捕获处理WCF通讯异常,以AlterMsg方式提示错误
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
            <param name="Proxy"></param>
            <param name="DoMethod"></param>
            <returns>接口返回结果</returns>
        </member>
        <member name="M:Lenovo.HIS.cUtils.FuncWcfProxy.BaseWork``2(``0,System.Func{``0,``1})">
            <summary>
            通用通讯方法统一处理类
            </summary>
            <typeparam name="T">代理类类型</typeparam>
            <typeparam name="K">Linq表达式</typeparam>
            <param name="Proxy">代理类</param>
            <param name="DoMethod">Linq表达式方法</param>
            <returns>接口返回结果</returns>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmProgressBar">
            <summary>
            进度条窗体类
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmProgressBar.Showing(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityWaiting})">
            <summary>
            显示进度条
            </summary>
            <param name="_funclist">需要执行的方法集合(方法返回参数为string,无入参)</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmProgressBar.Showing(System.Windows.Forms.Form,System.Collections.Generic.List{Lenovo.HIS.Entities.EntityWaiting})">
            <summary>
            显示进度条
            </summary>
            <param name="_handle">需要锁定为模式窗口的窗体</param>
            <param name="_funclist">需要执行的方法集合(方法返回参数为string,无入参)</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmProgressBar.#ctor(System.Collections.Generic.List{Lenovo.HIS.Entities.EntityWaiting})">
            <summary>
             窗体初始化构造
            </summary>
            <param name="Methods">需要执行的方法集合(方法返回参数为string,无入参)</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmProgressBar.fmProgressBar_Shown(System.Object,System.EventArgs)">
            <summary>
            进度加载
            </summary>
            <param name="sender">事件源</param>
            <param name="e">不包含任何事件数据的 System.EventArgs</param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmProgressBar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmProgressBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmProgressBar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lenovo.HIS.cUtils.fmWaiting">
            <summary>
            等待框窗体
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaiting.WaitingExcute(System.Action,System.String)">
            <summary>
            旋转等待指定方法执行结束
            </summary>
            <param name="_method">无入参和返回值方法</param>
            <param name="_displayWaitStr">需要显示的等待消息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaiting.WaitingExcute(System.Windows.Forms.Form,System.Action,System.String)">
            <summary>
            旋转等待指定方法执行结束
            </summary>
            <param name="_handle">需要锁定为模式窗口的窗体</param>
            <param name="_method">无入参和返回值方法</param>
            <param name="_displayWaitStr">需要显示的等待消息</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaiting.#ctor">
            <summary>
            等待十秒
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaiting.#ctor(System.Action,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="_method">执行方法(无入参和返回值)</param>
            <param name="_displayWaitStr"></param>
        </member>
        <member name="F:Lenovo.HIS.cUtils.fmWaiting.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaiting.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lenovo.HIS.cUtils.fmWaiting.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
